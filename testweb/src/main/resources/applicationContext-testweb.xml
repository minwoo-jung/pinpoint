<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo.xsd">


    <import resource="applicationContext-datasource.xml"/>
    <import resource="classpath:orm/mybatis/mybatis-dao-config.xml"/>
    <import resource="redis-context.xml"/>

    <context:component-scan
            base-package="com.navercorp.test.pinpoint.testweb.connector,
                                        com.navercorp.test.pinpoint.testweb.service,
                                        com.navercorp.test.pinpoint.testweb.repository"/>

    <util:properties id="thriftServerProps" location="classpath:thrift.properties"/>

    <util:properties id="testWebProps" location="classpath:testweb.properties"/>

    <bean id="demoUrlHolder" class="com.navercorp.test.pinpoint.testweb.configuration.DemoURLHolder"/>

    <bean id="jdbcTemplateMysql" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="mysqlDataSource"/>
    </bean>

    <bean id="jdbcTemplateCubrid" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="cubridDataSource"/>
    </bean>

    <bean id="jdbcTemplateOracle" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="oracleDataSource"/>
    </bean>

    <bean id="jdbcTemplatePostgreSql" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="postgreSqlDataSource"/>
    </bean>


    <bean id="arcusClientFactory" class="com.navercorp.test.pinpoint.testweb.component.ArcusClientFactory">
        <constructor-arg value="kra-dev.arcuscloud.navercorp.com:17288"/>
        <constructor-arg value="dev_pinpoint"/>
    </bean>
    <bean id="memcachedClientFactory" class="com.navercorp.test.pinpoint.testweb.component.MemcachedClientFactory">
        <constructor-arg value="10.105.72.10:11216,10.105.72.9:11216,10.105.72.11:11216"/>
    </bean>

    <bean id="mongoClientFactory" class="com.navercorp.test.pinpoint.testweb.component.MongoClientFactory">
        <constructor-arg value="${mongodb.host}"/>
        <constructor-arg value="${mongodb.port}"/>
    </bean>
    <bean id="mongoClientFactory37" class="com.navercorp.test.pinpoint.testweb.component.MongoClientFactory37">
        <constructor-arg value="${mongodb.host}"/>
        <constructor-arg value="${mongodb.port}"/>
    </bean>

    <mongo:db-factory id="mongoDbFactory" dbname="mongo" mongo-ref="mongoClient"/>

    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg name="mongoDbFactory" ref="mongoDbFactory"/>
    </bean>

    <bean id="gprcHelloWorldServer"
          class="com.navercorp.test.pinpoint.testweb.connector.grpc.HelloWorldServer"/>

    <bean id="gprcStreamHelloWorldServer"
          class="com.navercorp.test.pinpoint.testweb.connector.grpc.HelloWorldStreamServer"/>


    <!-- pinpoint bug regression test                                         -->
    <!--<bean id="arcusClientFactory" class="com.navercorp.test.pinpoint.testweb.component.ArcusClientFactory">-->
    <!--<constructor-arg value="dev.arcuscloud.nhncorp.com:17288"/>-->
    <!--<constructor-arg value="dev_pinpoint"/>-->
    <!--</bean>-->

    <!--<bean id="memcachedClientFactory" class="com.navercorp.test.pinpoint.testweb.component.MemcachedClientFactory">-->
        <!--<constructor-arg value="10.25.149.35:11213,10.25.149.36:11213"/>-->
    <!--</bean>-->
    <!-- pinpoint bug regression test                                         -->

    <!-- ============================================================= -->
    <!-- iBatis -->
    <!-- ============================================================= -->

    <!--  -->
    <bean id="mysqlSqlMapClient" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="mysqlDataSource"/>
        <property name="configLocation" value="classpath:mysql/SqlMapConfig.xml"/>
    </bean>

    <bean id="mysqlSqlMapClientTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="mysqlSqlMapClient"/>
    </bean>

    <bean id="mysqlTransactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="mysqlDataSource"/>
    </bean>

    <!-- oracle -->
    <bean id="oracleSqlMapClient" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="oracleDataSource"/>
        <property name="configLocation" value="classpath:oracle/SqlMapConfig.xml"/>
    </bean>

    <bean id="oracleSqlMapClientTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="oracleSqlMapClient"/>
    </bean>

    <bean id="oracleTransactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="oracleDataSource"/>
    </bean>

    <!-- cubrid -->
    <bean id="cubridSqlMapClient" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="cubridDataSource"/>
        <property name="configLocation" value="classpath:cubrid/SqlMapConfig.xml"/>
    </bean>

    <bean id="cubridSqlMapClientTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="cubridSqlMapClient"/>
    </bean>

    <bean id="cubridTransactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="cubridDataSource"/>
    </bean>

    <!-- mssqlserver -->
    <bean id="msSqlServerSqlMapClient" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="jtdsDataSource"/>
        <property name="configLocation" value="classpath:mssqlserver/SqlMapConfig.xml"/>
    </bean>

    <bean id="msSqlServerSqlMapClientTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="msSqlServerSqlMapClient"/>
    </bean>

    <bean id="msSqlServerTransactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="jtdsDataSource"/>
    </bean>

    <!-- postgreSql -->
    <bean id="postgreSqlSqlMapClient" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="postgreSqlDataSource"/>
        <property name="configLocation" value="classpath:postgresql/SqlMapConfig.xml"/>
    </bean>

    <bean id="postgreSqlSqlMapClientTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="postgreSqlSqlMapClient"/>
    </bean>

    <bean id="postgreSqlTransactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="postgreSqlDataSource"/>
    </bean>

    <task:executor id="threadPoolTaskExecutor" pool-size="5"/>
    <task:annotation-driven executor="threadPoolTaskExecutor" />

    <tx:annotation-driven transaction-manager="mysqlTransactionManager"/>

</beans>
