#
# Pinpoint agent configuration
# (Phase : local)
#

###########################################################
# Collector server                                        #
###########################################################
# local
profiler.collector.ip=localhost
# dev
#profiler.collector.ip=dev.collector.pinpoint.navercorp.com
# real
#profiler.collector.ip=collector.pinpoint.navercorp.com

# placeHolder support "${key}"
profiler.collector.span.ip=${profiler.collector.ip}
profiler.collector.span.port=9996

# placeHolder support "${key}"
profiler.collector.stat.ip=${profiler.collector.ip}
profiler.collector.stat.port=9995

# placeHolder support "${key}"
profiler.collector.tcp.ip=${profiler.collector.ip}
profiler.collector.tcp.port=9994


###########################################################
# Profiler Global Configuration                           #
###########################################################
profiler.enable=true

profiler.interceptorregistry.size=32768

# Manually override jvm vendor name (Oracle, IBM, OpenJDK, etc)
# You probably won't ever need to set this value.
profiler.jvm.vendor.name=

# Interval (in milliseconds) at which agent stat data is collected. (default : 5000, min : 1000, max : 5000)
profiler.jvm.stat.collect.interval=5000
# Number of agent stat data sent to the collector in a single batch. (default : 6)
profiler.jvm.stat.batch.send.count=6

# Allow to add detailed collector's metrics
profiler.jvm.stat.collect.detailed.metrics=false

profiler.sampling.enable=true

# 아래 지정한 값중 한 개의 트랜잭션을 수집합니다. (예를들어 1로 지정하면 100%수집, 2로 지정하면 50%수집 셈)
profiler.sampling.rate=1

# span을 Io에 flush할 경우 buffering 여부
profiler.io.buffering.enable=true

# buffering 시 몇개 까지 저장할지 여부
profiler.io.buffering.buffersize=20

profiler.spandatasender.write.queue.size=5120
#profiler.spandatasender.socket.sendbuffersize=1048576
#profiler.spandatasender.socket.timeout=3000
profiler.spandatasender.chunk.size=16384

profiler.statdatasender.write.queue.size=5120
#profiler.statdatasender.socket.sendbuffersize=1048576
#profiler.statdatasender.socket.timeout=3000
profiler.statdatasender.chunk.size=16384

profiler.agentInfo.send.retry.interval=300000

#  Tcp Data Command 허용 여부
profiler.tcpdatasender.command.accept.enable=true
profiler.tcpdatasender.command.activethread.enable=true
profiler.tcpdatasender.command.activethread.count.enable=true
profiler.tcpdatasender.command.activethread.threaddump.enable=true
profiler.tcpdatasender.command.activethread.threadlightdump.enable=true

# DataSource 수집 여부
profiler.pinpoint.datasource=true

## Call Stack.
# Set max depth, if -1 is unlimited and min is 2.
profiler.callstack.max.depth=64

# weather or not to propagate exceptions occured at interceptor
profiler.interceptor.exception.propagate=true

# Allow bytecode framework (JAVASSIST or ASM)
profiler.instrument.engine=ASM

# bytecode dump option
# java bytecode debug option
bytecode.dump.enable=false
#bytecode.dump.classlist=com.naver.user.UserService,com.naver.TestDao
bytecode.dump.classlist=
bytecode.dump.bytecode=false
bytecode.dump.verify=false
bytecode.dump.asm=false

# Matcher
profiler.instrument.matcher.enable=true
# Matcher cache. max size is 64.
profiler.instrument.matcher.interface.cache.size=4
profiler.instrument.matcher.interface.cache.entry.size=16
profiler.instrument.matcher.annotation.cache.size=4
profiler.instrument.matcher.annotation.cache.entry.size=4
profiler.instrument.matcher.super.cache.size=4
profiler.instrument.matcher.super.cache.entry.size=4

# Lambda expressions.
profiler.lambda.expressions.support=true

# Proxy HTTP headers.
# Please see (https://github.com/naver/pinpoint/blob/master/doc/proxy-http-header.md) for more information.
profiler.proxy.http.header.enable=true

# HTTP status code with request failure.
# 1xx, 2xx, 3xx, 4xx, 5xx, 100, 101, 200, 201, ... 501, 502, 503, 504, 505
# e.g. profiler.http.status.code.errors=5xx, 401, 403
profiler.http.status.code.errors=5xx

###########################################################
# application type                                        #
###########################################################
#profiler.applicationservertype=TOMCAT
#profiler.applicationservertype=BLOC

###########################################################
# application type detect order                           #
###########################################################
profiler.type.detect.order=com.navercorp.pinpoint.plugin.bloc.v3.Bloc3Detector,com.navercorp.pinpoint.plugin.tomcat.TomcatDetector

profiler.plugin.disable=

###########################################################
# user defined classes                                    #
###########################################################
#profiler.include=net.spy.memcached.*
#profiler.include=com.datastax.*
#profiler.include=com.google.api.client.http.*
#profiler.include=cubrid.*
#profiler.include=org.apache.commons.dbcp.*
#profiler.include=com.alibaba.dubbo.*
#profiler.include=com.google.gson.*
#profiler.include=org.apache.commons.httpclient.*
#profiler.include=org.apache.http.*
#profiler.include=com.ibatis.*
#profiler.include=com.fasterxml.jackson.*
#profiler.include=org.codehaus.jackson.*
#profiler.include=sun.net.www.protocol.http.*
#profiler.include=org.eclipse.jetty.*
#profiler.include=net.sf.json.*
#profiler.include=net.sourceforge.jtds.*
#profiler.include=org.apache.log4j.*
#profiler.include=ch.qos.logback.*
#profiler.include=org.mariadb.jdbc.*
#profiler.include=org.apache.ibatis.*
#profiler.include=com.mysql.jdbc.*
#profiler.include=com.ning.http.client.*
#profiler.include=com.squareup.okhttp.*
#profiler.include=oracle.jdbc.*
#profiler.include=org.postgresql.*
#profiler.include=redis.clients.*
#profiler.include=org.springframework.*
#profiler.include=org.apache.thrift.*
#profiler.include=org.apache.catalina.*
#profiler.include=com.nhncorp.lucy.*
#profiler.include=com.nhncorp.redis.*
#profiler.include=com.nhncorp.nbase_t.*
#profiler.include=com.nhncorp.nelo2.*
#profiler.include=org.springframework.*


# for play framework.
profiler.entrypoint=com.test.include.StandAloneCase.execute, com.test.include.StandAloneCase.nested, com.nhncorp.lucy.bloc.handler.ServiceInvoker.invoke

# Message queue listener invoker methods.
# This is usually for when a separate implementation or a framework provides a separate handler for invoking callbacks
# when consuming messages.
# Comma-separated list of fully qualified method names with a Message argument.
profiler.message.queue.client.handler.methods=org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener,org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener

###########################################################
# TOMCAT                                                  #
###########################################################
profiler.tomcat.enable=true
# Classes for detecting application server type. Comma separated list of fully qualified class names. Wildcard not supported.
profiler.tomcat.bootstrap.main=org.apache.catalina.startup.Bootstrap
# Check pre-conditions when registering class file transformers mainly due to JBoss plugin transforming the same class.
# Setting this to true currently adds transformers only if the application was launched via org.apache.catalina.startup.Bootstrap,
# or SpringBoot's launchers.
# Set this to false to bypass this check entirely (such as when launching standalone applications running embedded Tomcat).
profiler.tomcat.conditional.transform=false
# Hide pinpoint headers.
profiler.tomcat.hidepinpointheader=true
#naver standard l7 check
profiler.tomcat.excludeurl=/monitor/l7check.html, /monitor/l7check.nhn, /managerAgent/getInfo
#profiler.tomcat.excludeurl=/aa/test.html, /bb/exclude.html
profiler.tomcat.tracerequestparam=true

# original IP address header
# https://en.wikipedia.org/wiki/X-Forwarded-For
#profiler.tomcat.realipheader=X-Forwarded-For
# nginx real ip header
#profiler.tomcat.realipheader=X-Real-IP
# optional parameter, If the header value is ${profiler.tomcat.realipemptyvalue}, Ignore header value.
#profiler.tomcat.realipemptyvalue=unknown


###########################################################
# JETTY                                                   #
###########################################################
profiler.jetty.enable=true
# Classes for detecting application server type. Comma separated list of fully qualified class names. Wildcard not supported.
profiler.jetty.bootstrap.main=org.eclipse.jetty.start.Main
# URLs to exclude from tracing
profiler.jetty.excludeurl=
# Hide pinpoint headers. 9.x only
profiler.jetty.hide-pinpoint-header=true

###########################################################
# DUBBO                                                   #
###########################################################
profiler.dubbo.enable=true
# Classes for detecting application server type. Comma separated list of fully qualified class names. Wildcard not supported.
profiler.dubbo.bootstrap.main=com.alibaba.dubbo.container.Main


###########################################################
# JBOSS                                                   #
###########################################################
profiler.jboss.enable=false
# Classes for detecting application server type. Comma separated list of fully qualified class names. Wildcard not supported.
profiler.jboss.bootstrap.main=org.jboss.modules.Main
# Check pre-conditions when registering class file transformers mainly due to Tomcat plugin transforming the same class.
# Setting this to true currently adds transformers only if the application was launched via org.jboss.modules.Main.
# Set this to false to bypass this check entirely.
profiler.jboss.conditional.transform=true
# Hide pinpoint headers.
profiler.jboss.hidepinpointheader=true
# URLs to exclude from tracing
profiler.jboss.excludeurl=
# HTTP Request methods to exclude from tracing
#profiler.jboss.excludemethod=
profiler.jboss.tracerequestparam=true

# original IP address header
# https://en.wikipedia.org/wiki/X-Forwarded-For
#profiler.jboss.realipheader=X-Forwarded-For
# nginx real ip header
#profiler.jboss.realipheader=X-Real-IP
# optional parameter, If the header value is ${profiler.jboss.realipemptyvalue}, Ignore header value.
#profiler.jboss.realipemptyvalue=unknown


###########################################################
# BLOC                                                    #
###########################################################
profiler.bloc.enable=true
# Classes for detecting application server type. Comma separated list of fully qualified class names. Wildcard not supported.
profiler.bloc.bootstrap.main=org.apache.catalina.startup.Bootstrap, com.nhncorp.lucy.bloc.server.BlocServer
profiler.bloc.tracerequestparam=true

###########################################################
# Vert.x(Reliability and stability can not be guaranteed) #
###########################################################
profiler.vertx.enable=true
# Classes for detecting application server type. Comma separated list of fully qualified class names. Wildcard not supported.
profiler.vertx.bootstrap.main=io.vertx.core.Starter
# Track Vertx.runOnContext() & Vertx.executeBlocking().
# Sets the base packages that implements io.vertx.core.Handler.
profiler.vertx.handler.base-packages=com.navercorp.test.pinpoint
# e.g. com.service.handler, com.server.http.handler

# HTTP server
profiler.vertx.http.server.enable=true
# Set HttpServerRequestHandler method name. The argument is io.vertx.core.http.HttpServerRequest.
profiler.vertx.http.server.request-handler.method.name=io.vertx.ext.web.impl.RouterImpl.accept
profiler.vertx.http.server.tracerequestparam=true
profiler.vertx.http.server.hidepinpointheader=true
# URLs to exclude from tracing
profiler.vertx.http.server.excludeurl=
# original IP address header
# https://en.wikipedia.org/wiki/X-Forwarded-For
#profiler.vertx.http.server.realipheader=X-Forwarded-For
# nginx real ip header
#profiler.vertx.http.realipheader=X-Real-IP
# optional parameter, If the header value is ${profiler.vertx.http.server.realipemptyvalue}, Ignore header value.
#profiler.vertx.http.server.realipemptyvalue=unknown
# HTTP Request methods to exclude from tracing
#profiler.vertx.http.server.excludemethod=

# HTTP client
profiler.vertx.http.client.enable=true
profiler.vertx.http.client.param=true
profiler.vertx.http.client.cookie=true
# When to dump cookies. Either ALWAYS or EXCEPTION.
profiler.vertx.http.client.cookie.dumptype=ALWAYS
# 1 out of n cookies will be sampled where n is the rate. (1: 100%)
profiler.vertx.http.client.cookie.sampling.rate=1
profiler.vertx.http.client.entity.statuscode=true

###########################################################
# SPRING BOOT                                             #
###########################################################
profiler.springboot.enable=true
# Classes for detecting application server type. Comma separated list of fully qualified class names. Wildcard not supported.
profiler.springboot.bootstrap.main=org.springframework.boot.loader.JarLauncher, org.springframework.boot.loader.WarLauncher, org.springframework.boot.loader.PropertiesLauncher

###########################################################
# JSP                                                     #
###########################################################
profiler.jsp.enable=true

###########################################################
# JDBC                                                    #
###########################################################
profiler.jdbc=true
profiler.jdbc.sqlcachesize=1024
profiler.jdbc.tracesqlbindvalue=true
profiler.jdbc.maxsqlbindvaluesize=1024

#
# MYSQL
#
profiler.jdbc.mysql=true
profiler.jdbc.mysql.setautocommit=true
profiler.jdbc.mysql.commit=true
profiler.jdbc.mysql.rollback=true
#profiler.jdbc.mysql.tracesqlbindvalue=true

#
# MSSQL Jtds
#
profiler.jdbc.jtds=true
profiler.jdbc.jtds.setautocommit=true
profiler.jdbc.jtds.commit=true
profiler.jdbc.jtds.rollback=true
#profiler.jdbc.jtds.tracesqlbindvalue=true


#
# Oracle
#
profiler.jdbc.oracle=true
profiler.jdbc.oracle.setautocommit=true
profiler.jdbc.oracle.commit=true
profiler.jdbc.oracle.rollback=true
#profiler.jdbc.oracle.tracesqlbindvalue=true

#
# CUBRID
#
profiler.jdbc.cubrid=true
profiler.jdbc.cubrid.setautocommit=true
profiler.jdbc.cubrid.commit=true
profiler.jdbc.cubrid.rollback=true
#profiler.jdbc.cubrid.tracesqlbindvalue=true

#
# DBCP
#
profiler.jdbc.dbcp=true
profiler.jdbc.dbcp.connectionclose=true

#
# DBCP2
#
profiler.jdbc.dbcp2=true
profiler.jdbc.dbcp2.connectionclose=true

#
# HIKARICP
#
profiler.jdbc.hikaricp=true
profiler.jdbc.hikaricp.connectionclose=true

#
# NBASE-T
#
profiler.jdbc.nbaset=true
profiler.jdbc.nbaset.setautocommit=true
profiler.jdbc.nbaset.commit=true
profiler.jdbc.nbaset.rollback=true
#profiler.jdbc.nbaset.tracesqlbindvalue=true

#
# NBASE-T-CP
#
profiler.jdbc.nbaset.cp=true

#
# MARIADB
#
profiler.jdbc.mariadb=true
profiler.jdbc.mariadb.setautocommit=true
profiler.jdbc.mariadb.commit=true
profiler.jdbc.mariadb.rollback=true
#profiler.jdbc.mariadb.tracesqlbindvalue=true

#
# CASSANDRA
#
profiler.cassandra=true
#profiler.cassandra.tracecqlbindvalue=true

#
# PostgreSQL
#
profiler.jdbc.postgresql=true
profiler.jdbc.postgresql.setautocommit=true
profiler.jdbc.postgresql.commit=true
profiler.jdbc.postgresql.rollback=true
###########################################################
# Apache HTTP Client  3.x                                 #
###########################################################
profiler.apache.httpclient3=true

# Record Parameter.
profiler.apache.httpclient3.param=true

profiler.apache.httpclient3.cookie=true

# When cookies should be dumped. It could be ALWAYS or EXCEPTION.
profiler.apache.httpclient3.cookie.dumptype=ALWAYS
profiler.apache.httpclient3.cookie.sampling.rate=1

# Dump entities of POST or PUT request. limited to entities which is HttpEtity.isRepeatable() == true.
profiler.apache.httpclient3.entity=true

# When entities should be dumped. ALWAYS or EXCEPTION.
profiler.apache.httpclient3.entity.dumptype=ALWAYS
profiler.apache.httpclient3.entity.sampling.rate=1

# Record IO time.
profiler.apache.httpclient3.io=true

###########################################################
# Apache HTTP Client  4.x                                 #
###########################################################
profiler.apache.httpclient4=true

# Record Parameter.
profiler.apache.httpclient4.param=true

profiler.apache.httpclient4.cookie=true

# cookie를 언제 덤프할지 결정. ALWAYS or EXCEPTION 2가지
profiler.apache.httpclient4.cookie.dumptype=ALWAYS
profiler.apache.httpclient4.cookie.sampling.rate=1

# post, put의 entity를 덤프한다. 단 HttpEtity.isRepeatable()=true 인 Entity에 한정된다.
profiler.apache.httpclient4.entity=true

# entity를 언제 덤프할지 결정. ALWAYS or EXCEPTION 2가지
profiler.apache.httpclient4.entity.dumptype=ALWAYS
profiler.apache.httpclient4.entity.sampling.rate=1

# Record IO time.
profiler.apache.httpclient4.io=true

# Not support yet
#profiler.apache.nio.httpclient4=true

###########################################################
# JDK HTTPURLConnection                                   #
###########################################################
# Profile parameter.
profiler.jdk.http.param=true

###########################################################
# Ning Async HTTP Client                                  #
###########################################################
profiler.ning.asynchttpclient=true
profiler.ning.asynchttpclient.cookie=true
profiler.ning.asynchttpclient.cookie.dumptype=ALWAYS
profiler.ning.asynchttpclient.cookie.dumpsize=1024
profiler.ning.asynchttpclient.cookie.sampling.rate=1
profiler.ning.asynchttpclient.entity=true
profiler.ning.asynchttpclient.entity.dumptype=ALWAYS
profiler.ning.asynchttpclient.entity.dumpsize=1024
profiler.ning.asynchttpclient.entity.sampling.rate=1
profiler.ning.asynchttpclient.param=true
profiler.ning.asynchttpclient.param.dumptype=ALWAYS
profiler.ning.asynchttpclient.param.dumpsize=1024
profiler.ning.asynchttpclient.param.sampling.rate=1


###########################################################
# LINE+ baseframework                                     #
###########################################################
profiler.line.game.netty.param.dumpsize=512
profiler.line.game.netty.entity.dumpsize=512
profiler.line.game.netty.param=true

###########################################################
# Arcus                                                   #
###########################################################
profiler.arcus=true
profiler.arcus.async=true
profiler.arcus.keytrace=true


###########################################################
# Memcached                                               #
###########################################################
profiler.memcached=true
profiler.memcached.async=true
profiler.memcached.keytrace=true


###########################################################
# Thrift                                                  #
###########################################################
profiler.thrift.client=true
profiler.thrift.processor=true
profiler.thrift.service.args=true
profiler.thrift.service.result=true


###########################################################
# ibatis                                                  #
###########################################################
profiler.orm.ibatis=true


###########################################################
# mybatis                                                 #
###########################################################
profiler.orm.mybatis=true


###########################################################
# spring-beans
###########################################################
# Profile spring-beans
profiler.spring.beans=true

# filters
#    filter
#    filter OR filters
# filter
#    value
#    value AND filter
# value
#    token
#    token OR token
# token
#    profiler.spring.beans.n.scope= [component-scan | post-processor] default is component-scan.
#    profiler.spring.beans.n.base-packages= [package name, ...]
#    profiler.spring.beans.n.name.pattern= [regex pattern, regex:regex pattern, antstyle:antstyle pattern, ...]
#    profiler.spring.beans.n.class.pattern= [regex pattern, regex:regex pattern, antstyle:antstyle pattern, ...]
#    profiler.spring.beans.n.annotation= [annotation name, ...]
#
# Scope:
# component-scan: <context:component-scan ... /> or @ComponentScan
# post-processor: BeanPostProcessor - Slow!!!
#
# ANT Style pattern rules:
# ? - matches on character
# * - matches zero or more characters
# ** - matches zero or more 'directories' in a path

# Examples
# profiler.spring.beans.1.scope=component-scan
# profiler.spring.beans.1.base-packages=com.foo, com.bar
# profiler.spring.beans.1.name.pattern=.*Foo, regex:.*Bar, antstyle:*Controller
# profiler.spring.beans.1.class.pattern=
# profiler.spring.beans.1.annotation=org.springframework.stereotype.Controller,org.springframework.stereotype.Service,org.springframework.stereotype.Repository
#
# profiler.spring.beans.2.scope=post-processor
# profiler.spring.beans.2.base-packages=com.foo
# profiler.spring.beans.2.name.pattern=
# profiler.spring.beans.2.class.pattern=antstyle:com.foo.repository.*Repository, antstyle:com.foo.Service.Main*
# profiler.spring.beans.2.annotation=

profiler.spring.beans.1.scope=component-scan
profiler.spring.beans.1.base-packages=
profiler.spring.beans.1.name.pattern=
profiler.spring.beans.1.class.pattern=
profiler.spring.beans.1.annotation=org.springframework.stereotype.Controller,org.springframework.stereotype.Service,org.springframework.stereotype.Repository

profiler.spring.beans.mark.error=false

###########################################################
# log4j (guide url : https://github.com/naver/pinpoint/blob/master/doc/per-request_feature_guide.md)
###########################################################
profiler.log4j.logging.transactioninfo=false

###########################################################
# logback (guide url : https://github.com/naver/pinpoint/blob/master/doc/per-request_feature_guide.md)
###########################################################
profiler.logback.logging.transactioninfo=false

###########################################################
# google httpclient
###########################################################
# Profile async.
profiler.google.httpclient.async=true

###########################################################
# redis                                                   #
###########################################################
profiler.redis=true
profiler.redis.pipeline=true
profiler.redis.io=true

###########################################################
# nBase-ARC                                               #
###########################################################
profiler.nbase_arc=true
profiler.nbase_arc.pipeline=true
profiler.nbase_arc.io=true


###########################################################
# OkHttp
###########################################################
# Record param.
profiler.okhttp.param=true

# Record Cookies.
profiler.okhttp.cookie=true

# When to dump cookies. Either ALWAYS or EXCEPTION.
profiler.okhttp.cookie.dumptype=ALWAYS
# 1 out of n cookies will be sampled where n is the rate. (1: 100%)
profiler.okhttp.cookie.sampling.rate=1

profiler.okhttp.async=true

###########################################################
# NIMM                                                    #
###########################################################
profiler.nimm.param=true

###########################################################
# gson
###########################################################
profiler.json.gson=true

###########################################################
# jackson
###########################################################
profiler.json.jackson=true

###########################################################
# json-lib
###########################################################
profiler.json.jsonlib=true

###########################################################
# ActiveMQ Client
###########################################################
profiler.activemq.client.enable=true
profiler.activemq.client.producer.enable=true
profiler.activemq.client.consumer.enable=true
profiler.activemq.client.trace.message=false

# ActiveMQ destination path separator (default is ".")
profiler.activemq.client.destination.separator=

# ActiveMQ destinations to exclude from tracing (comma seprated list of ant-matched destinations)
profiler.activemq.client.destination.exclude=

###########################################################
# RxJava
###########################################################
profiler.rxjava=true

###########################################################
# Hystrix
###########################################################
# profiler.rxjava must also be enabled to properly trace hystrix commands
profiler.hystrix=true

###########################################################
# RestTemplate
###########################################################
profiler.resttemplate=false

###########################################################
# Netty
###########################################################
profiler.netty=false
profiler.netty.http=false

###########################################################
# RabbitMQ Client
###########################################################
profiler.rabbitmq.client.enable=true
profiler.rabbitmq.client.producer.enable=true
profiler.rabbitmq.client.consumer.enable=true
# Custom consumer classes to be traced (comma separated list of fully qualified class names)
# If a consumer class is an inner class, specify the outer class
profiler.rabbitmq.client.consumer.classes=
# RabbitMQ exchange to exclude from tracing (comma seprated list of ant-matched destinations)
profiler.rabbitmq.client.exchange.exclude=

profiler.collector.tcp.ssl.enable=true
profiler.collector.tcp.ssl.algorithm.insecure=true
profiler.guice.module.factory=com.navercorp.pinpoint.profiler.context.module.NaverApplicationContextModuleFactory
