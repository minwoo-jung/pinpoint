<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.navercorp.pinpoint</groupId>
        <artifactId>pinpoint-naver</artifactId>
        <version>1.1.0-SNAPSHOT</version>
    </parent>

    <artifactId>pinpoint-naver-agent</artifactId>
    <name>naver-pinpoint-agent-distribution</name>
    <!-- this module contains integration tests. if we set packaging to pom, 
        tests are not run. so we set it to jar even though the project will not be 
        packaged as a jar. -->
    <packaging>jar</packaging>

    <properties>
        <distribution.directory>${project.build.directory}/pinpoint-agent</distribution.directory>
        <tomcat.version>7.0.34</tomcat.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.navercorp.pinpoint</groupId>
            <artifactId>pinpoint-profiler</artifactId>
        </dependency>
        <dependency>
            <groupId>com.navercorp.pinpoint</groupId>
            <artifactId>pinpoint-profiler-optional</artifactId>
        </dependency>
        <dependency>
            <groupId>com.navercorp.pinpoint</groupId>
            <artifactId>pinpoint-naver-plugin</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- plug-ins -->
        <dependency>
            <groupId>com.navercorp.pinpoint</groupId>
            <artifactId>pinpoint-plugins</artifactId>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>com.navercorp.pinpoint</groupId>
            <artifactId>pinpoint-naver-plugins</artifactId>
            <type>pom</type>
        </dependency>

        <!-- for tests -->
        <dependency>
            <groupId>com.navercorp.pinpoint</groupId>
            <artifactId>pinpoint-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- nelo logging -->
        <dependency>
            <groupId>com.nhncorp.nelo2</groupId>
            <artifactId>nelo2-java-sdk-log4j</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
        </dependency>

        <dependency>
            <groupId>com.nhncorp</groupId>
            <artifactId>triples-redis-client</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>cubrid</groupId>
            <artifactId>cubrid-jdbc</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.jtds</groupId>
            <artifactId>jtds</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.nhncorp.lucy</groupId>
            <artifactId>bloc-server</artifactId>
            <version>4.0.3</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>arcus</groupId>
            <artifactId>arcus-client</artifactId>
            <version>1.6.4.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>catalina</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>coyote</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>${basedir}/src/main/java</directory>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </resource>
            <resource>
                <filtering>true</filtering>
                <directory>${basedir}/src/main/resources</directory>
            </resource>
            <resource>
                <directory>${basedir}/src/main/resources-${env}</directory>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.7</version>
                <executions>
                    <execution>
                        <id>copy-tomcat-webapp</id>
                        <!-- here the phase you need -->
                        <phase>process-test-classes</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/test/tomcat/base/webapps/test/WEB-INF/classes/com/navercorp/pinpoint/plugin/tomcat/webapp</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.build.testOutputDirectory}/com/navercorp/pinpoint/plugin/tomcat/webapp</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.10</version>
                <executions>
                    <execution>
                        <id>copy-tomcat-test-dependencies</id>
                        <phase>process-test-classes</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/test/tomcat/base/webapps/test/WEB-INF/lib</outputDirectory>
                           <includeArtifactIds>junit,hamcrest-core,pinpoint-test</includeArtifactIds>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.18.1</version>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>verify</id>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <jvm>${jdk.home}/bin/java</jvm>
                    <!-- AbstractPinpointPluginTestSuite needs this to resolve path of required jars -->
                    <useSystemClassLoader>false</useSystemClassLoader>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.5.3</version>
                <configuration>
                    <descriptors>
                        <descriptor>src/assembly/distribution.xml</descriptor>
                    </descriptors>
                    <outputDirectory>${project.build.directory}</outputDirectory>
                    <appendAssemblyId>false</appendAssemblyId>
                </configuration>
                <executions>
                    <execution>
                        <id>create-distribution</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <delete>
                                    <!-- Delete plugins group pom file -->
                                    <fileset
                                        dir="${project.build.directory}/${project.build.finalName}/plugin"
                                        includes="*.pom" />
                                </delete>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
