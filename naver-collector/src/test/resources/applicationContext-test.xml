<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2018 NAVER Corp.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee" xmlns:lang="http://www.springframework.org/schema/lang"
       xmlns:beans="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
        http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:annotation-config/>

    <context:component-scan
            base-package="com.navercorp.pinpoint.collector.dao.hbase,
                         com.navercorp.pinpoint.collector.handler,
                         com.navercorp.pinpoint.collector.receiver.thrift.tcp,
                         com.navercorp.pinpoint.collector.mapper,
                         com.navercorp.pinpoint.collector.util,
                         com.navercorp.pinpoint.collector.config,
                         com.navercorp.pinpoint.collector.service,
                         com.navercorp.pinpoint.common.server.bo,
                         com.navercorp.pinpoint.common.server.util" />

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>hbase.properties</value>
                <value>pinpoint-collector.properties</value>
            </list>
        </property>
    </bean>

    <util:properties id="pinpoint_collector_properties" location="classpath:pinpoint-collector.properties" />

    <bean id="collectorConfiguration" class="com.navercorp.pinpoint.collector.config.CollectorConfiguration">
        <property name="properties" ref="pinpoint_collector_properties"/>
    </bean>

    <bean id="flinkConfiguration" class="com.navercorp.pinpoint.collector.config.FlinkConfiguration">
        <property name="properties" ref="pinpoint_collector_properties"/>
    </bean>


    <import resource="classpath:applicationContext-hbase.xml"/>
    <import resource="classpath:applicationContext-collector-namespace.xml"/>

    <bean id="metricRegistry" class="com.codahale.metrics.MetricRegistry">
    </bean>


    <bean id="metricsServlet" class="com.codahale.metrics.servlets.MetricsServlet">
        <constructor-arg ref="metricRegistry" />
    </bean>

    <bean id="commandHeaderTBaseSerializerFactory" class="com.navercorp.pinpoint.thrift.io.CommandHeaderTBaseSerializerFactory">
    </bean>
    <bean id="commandHeaderTBaseDeserializerFactory" class="com.navercorp.pinpoint.thrift.io.CommandHeaderTBaseDeserializerFactory">
    </bean>

    <bean id="agentEventMessageSerializerV1" class="com.navercorp.pinpoint.common.server.util.AgentEventMessageSerializerV1"/>

    <bean id="agentLifeCycleChangeEventHandler" class="com.navercorp.pinpoint.collector.receiver.AgentLifeCycleChangeEventHandler"/>

    <!-- Route Filters -->
    <bean id="loggingRouteFilter" class="com.navercorp.pinpoint.collector.cluster.route.filter.LoggingFilter"/>

    <!-- Filter Chains -->
    <bean id="requestFilterChain" class="com.navercorp.pinpoint.collector.cluster.route.DefaultRouteFilterChain">
        <constructor-arg>
            <list value-type="com.navercorp.pinpoint.collector.cluster.route.filter.RouteFilter">
                <ref bean="loggingRouteFilter"/>
            </list>
        </constructor-arg>
    </bean>

    <bean id="responseFilterChain" class="com.navercorp.pinpoint.collector.cluster.route.DefaultRouteFilterChain">
        <constructor-arg>
            <list value-type="com.navercorp.pinpoint.collector.cluster.route.filter.RouteFilter">
                <ref bean="loggingRouteFilter"/>
            </list>
        </constructor-arg>
    </bean>

    <bean id="streamCreateFilterChain" class="com.navercorp.pinpoint.collector.cluster.route.DefaultRouteFilterChain">
        <constructor-arg>
            <list value-type="com.navercorp.pinpoint.collector.cluster.route.filter.RouteFilter">
                <ref bean="loggingRouteFilter"/>
            </list>
        </constructor-arg>
    </bean>

    <bean id="streamResponseFilterChain" class="com.navercorp.pinpoint.collector.cluster.route.DefaultRouteFilterChain">
        <constructor-arg>
            <list value-type="com.navercorp.pinpoint.collector.cluster.route.filter.RouteFilter">
                <ref bean="loggingRouteFilter"/>
            </list>
        </constructor-arg>
    </bean>

    <bean id="streamCloseFilterChain" class="com.navercorp.pinpoint.collector.cluster.route.DefaultRouteFilterChain">
        <constructor-arg>
            <list value-type="com.navercorp.pinpoint.collector.cluster.route.filter.RouteFilter">
            </list>
        </constructor-arg>
    </bean>

    <!-- Cluster 관련된 Bean들 -->
    <bean id="targetClusterPointRepository" class="com.navercorp.pinpoint.collector.cluster.ClusterPointRepository"/>

    <bean id="defaultRouteHandler" class="com.navercorp.pinpoint.collector.cluster.route.DefaultRouteHandler">
        <constructor-arg index="0" type="com.navercorp.pinpoint.collector.cluster.ClusterPointLocator" ref="targetClusterPointRepository"/>
        <constructor-arg index="1" type="com.navercorp.pinpoint.collector.cluster.route.RouteFilterChain" ref="requestFilterChain"/>
        <constructor-arg index="2" type="com.navercorp.pinpoint.collector.cluster.route.RouteFilterChain" ref="responseFilterChain"/>
    </bean>

    <bean id="streamRouteHandler" class="com.navercorp.pinpoint.collector.cluster.route.StreamRouteHandler">
        <constructor-arg index="0" type="com.navercorp.pinpoint.collector.cluster.ClusterPointLocator" ref="targetClusterPointRepository"/>
        <constructor-arg index="1" type="com.navercorp.pinpoint.collector.cluster.route.RouteFilterChain" ref="streamCreateFilterChain"/>
        <constructor-arg index="2" type="com.navercorp.pinpoint.collector.cluster.route.RouteFilterChain" ref="streamResponseFilterChain"/>
        <constructor-arg index="3" type="com.navercorp.pinpoint.collector.cluster.route.RouteFilterChain" ref="streamCloseFilterChain"/>
    </bean>

    <bean id="clusterPointRouter" class="com.navercorp.pinpoint.collector.cluster.ClusterPointRouter">
        <constructor-arg ref="targetClusterPointRepository"/>
        <constructor-arg ref="defaultRouteHandler"/>
        <constructor-arg ref="streamRouteHandler"/>
    </bean>

    <bean id="jsonObjectMapper" class="com.fasterxml.jackson.databind.ObjectMapper">
    </bean>


    <bean id="hTable" class="com.navercorp.pinpoint.common.hbase.HBaseTables"/>

    <bean id="callerMerge" class="com.navercorp.pinpoint.collector.dao.hbase.statistics.RowKeyMerge">
        <constructor-arg value="#{hTable.MAP_STATISTICS_CALLER_VER2_CF_COUNTER}"/>
    </bean>

    <bean id="callerBulkIncrementer" class="com.navercorp.pinpoint.collector.dao.hbase.statistics.BulkIncrementer">
        <constructor-arg ref="callerMerge"/>
    </bean>

    <bean id="calleeMerge" class="com.navercorp.pinpoint.collector.dao.hbase.statistics.RowKeyMerge">
        <constructor-arg value="#{hTable.MAP_STATISTICS_CALLEE_VER2_CF_COUNTER}"/>
    </bean>

    <bean id="calleeBulkIncrementer" class="com.navercorp.pinpoint.collector.dao.hbase.statistics.BulkIncrementer">
        <constructor-arg ref="calleeMerge"/>
    </bean>

    <bean id="selfMerge" class="com.navercorp.pinpoint.collector.dao.hbase.statistics.RowKeyMerge">
        <constructor-arg value="#{hTable.MAP_STATISTICS_SELF_VER2_CF_COUNTER}"/>
    </bean>

    <bean id="selfBulkIncrementer" class="com.navercorp.pinpoint.collector.dao.hbase.statistics.BulkIncrementer">
        <constructor-arg ref="selfMerge"/>
    </bean>

    <bean id="timeSlot" class="com.navercorp.pinpoint.common.util.DefaultTimeSlot">
    </bean>

    <bean id="slf4jCommonLoggerFactory" class="com.navercorp.pinpoint.common.server.util.Slf4jCommonLoggerFactory">
    </bean>

    <bean id="typeLoaderService" class="com.navercorp.pinpoint.common.server.util.ServerTraceMetadataLoaderService">
        <constructor-arg ref="slf4jCommonLoggerFactory"/>
    </bean>

    <bean id="serviceTypeRegistryService" class="com.navercorp.pinpoint.loader.service.DefaultServiceTypeRegistryService">
        <constructor-arg ref="typeLoaderService"/>
    </bean>

    <bean id="sequenceSpanEventFilter" class="com.navercorp.pinpoint.common.server.bo.filter.SequenceSpanEventFilter">
        <constructor-arg index="0" value="${collector.spanEvent.sequence.limit:10000}"/>
    </bean>
</beans>