<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:lang="http://www.springframework.org/schema/lang"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <context:annotation-config/>

    <context:component-scan base-package="com.navercorp.pinpoint.web.dao.hbase,
                                         com.navercorp.pinpoint.web.dao.mysql,
                                         com.navercorp.pinpoint.web.service,
                                         com.navercorp.pinpoint.web.mapper,
                                         com.navercorp.pinpoint.web.filter,
                                         com.navercorp.pinpoint.web.alarm,
                                         com.navercorp.pinpoint.web.config,
                                         com.navercorp.pinpoint.web.applicationmap,
                                         com.navercorp.pinpoint.collector.mapper.thrift,
                                         com.navercorp.pinpoint.collector.dao.hbase.stat,
                                         com.navercorp.pinpoint.collector.dao.hbase.filter,
                                         com.navercorp.pinpoint.common.server.bo,
                                         com.navercorp.pinpoint.common.server.util">
        <context:exclude-filter type="regex" expression="com\.navercorp\.pinpoint\.collector\.mapper\.thrift\.event\..*"/>
    </context:component-scan>

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>test-hbase.properties</value>
                <value>jdbc.properties</value>
            </list>
        </property>
    </bean>

    <import resource="classpath:applicationContext-hbase.xml"/>
    <import resource="classpath:applicationContext-datasource.xml" />
    <import resource="classpath:applicationContext-dao-config.xml" />
    <import resource="classpath:applicationContext-web-namespace-test.xml" />
    <import resource="classpath:applicationContext-dao-config-naver.xml" />

    <bean id="trace" class="com.navercorp.pinpoint.collector.dao.hbase.HbaseTraceDaoV2"/>
    <bean class="com.navercorp.pinpoint.collector.dao.hbase.HbaseAgentInfoDao"/>

    <bean id="sequenceSpanEventFilter" class="com.navercorp.pinpoint.common.server.bo.filter.SequenceSpanEventFilter">
        <constructor-arg index="0" value="${collector.spanEvent.sequence.limit:10000}"/>
    </bean>

    <bean id="jsonObjectMapper" class="com.fasterxml.jackson.databind.ObjectMapper"/>

    <bean id="rangeFactory" class="com.navercorp.pinpoint.web.vo.RangeFactory"/>

    <bean id="timeSlot" class="com.navercorp.pinpoint.common.util.DefaultTimeSlot"/>
    
    <util:properties id="pinpointWebProps" location="classpath:pinpoint-web-junit.properties"/>
    
    <bean id="config" class="com.navercorp.pinpoint.web.config.WebConfig"/>
    
    <bean id="commandHeaderTBaseSerializerFactory" class="com.navercorp.pinpoint.thrift.io.CommandHeaderTBaseSerializerFactory">
    </bean>

    <bean id="commandHeaderTBaseDeserializerFactory" class="com.navercorp.pinpoint.thrift.io.CommandHeaderTBaseDeserializerFactory">
    </bean>

    <bean id="clusterConnectionManager" class="com.navercorp.pinpoint.web.cluster.connection.ClusterConnectionManager">
        <constructor-arg ref="config" />
    </bean>

    <bean id="clusterDataManager" class="com.navercorp.pinpoint.web.cluster.zookeeper.ZookeeperClusterDataManager">
        <constructor-arg ref="config" />
    </bean>

    <bean id="clusterManager" class="com.navercorp.pinpoint.web.cluster.ClusterManager">
        <constructor-arg ref="config" />
    </bean>

    <bean id="agentEventMessageDeserializer" class="com.navercorp.pinpoint.common.server.util.AgentEventMessageDeserializer">
        <constructor-arg ref="commandHeaderTBaseDeserializerFactory"/>
    </bean>

    <bean id="slf4jCommonLoggerFactory" class="com.navercorp.pinpoint.common.server.util.Slf4jCommonLoggerFactory">
    </bean>

    <bean id="typeLoaderService" class="com.navercorp.pinpoint.common.server.util.ServerTraceMetadataLoaderService">
        <constructor-arg index="0" ref="slf4jCommonLoggerFactory"/>
    </bean>

    <bean id="serviceTypeRegistryService" class="com.navercorp.pinpoint.common.service.DefaultServiceTypeRegistryService">
        <constructor-arg ref="typeLoaderService"/>
        <constructor-arg ref="slf4jCommonLoggerFactory"/>
    </bean>

    <bean id="annotationKeyRegistryService" class="com.navercorp.pinpoint.common.service.DefaultAnnotationKeyRegistryService">
        <constructor-arg ref="typeLoaderService"/>
        <constructor-arg ref="slf4jCommonLoggerFactory"/>
    </bean>

    <bean id="annotationKeyMatcherService" class="com.navercorp.pinpoint.web.service.DefaultAnnotationKeyMatcherService"></bean>
    
        <bean id="spanServiceImpl" class="com.navercorp.pinpoint.web.service.SpanServiceImpl">
        <property name="sqlMetaDataDao" ref="hbaseSqlMetaDataDao"/>
    </bean>
    

    <bean id="hbaseSqlMetaDataDao" class="com.navercorp.pinpoint.web.dao.hbase.HbaseSqlMetaDataDao">
        <property name="rowKeyDistributorByHashPrefix" ref="metadataRowKeyDistributor2"></property>
        <property name="sqlMetaDataMapper" ref="sqlMetaDataMapper2"></property>
    </bean>

    <bean id="sqlMetaDataMapper2" class="com.navercorp.pinpoint.web.mapper.SqlMetaDataMapper">
        <property name="rowKeyDistributorByHashPrefix" ref="metadataRowKeyDistributor2"></property>
    </bean>

    <bean id="propsNssAuthDao" class="com.navercorp.pinpoint.web.dao.props.PropsNssAuthDao">
        <constructor-arg index="0" value="#{pinpointWebProps['nss.override.id'] ?: ''}"/>
        <constructor-arg index="1" value="#{pinpointWebProps['nss.authorized.prefix'] ?: ''}"/>
    </bean>

    <bean id="nssAuthDaoFactory" class="com.navercorp.pinpoint.web.dao.NssAuthDaoFactory"/>

    <bean id="nssFilter" class="com.navercorp.pinpoint.web.servlet.NssFilter">
        <constructor-arg index="0" value="#{pinpointWebProps['nss.user.header.key'] ?: 'SSO_USER'}"/>
        <constructor-arg index="1" ref="nssAuthServiceImpl"/>
        <constructor-arg index="2" ref="jsonObjectMapper"/>
    </bean>

    <!--  Web Socket  -->
    <bean id="handlerRegister" class="com.navercorp.pinpoint.web.websocket.PinpointWebSocketHandlerManager">
        <constructor-arg>
            <list>
            </list>
        </constructor-arg>
    </bean>

    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                    <property name="objectMapper">
                        <bean class="com.fasterxml.jackson.databind.ObjectMapper"/>
                    </property>
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/json</value>
                            <value>application/json</value>
                        </list>
                    </property>
                </bean>
                <bean class="org.springframework.http.converter.FormHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>application/x-www-form-urlencoded</value>
                        </list>
                    </property>
                </bean>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/plain</value>
                            <value>text/html</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="applicationsMapCreateExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"/>

    <bean id="nodeHistogramAppendExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"/>

    <bean id="serverInfoAppendExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"/>
</beans>
