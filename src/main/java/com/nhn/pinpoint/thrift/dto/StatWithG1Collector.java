/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.nhn.pinpoint.thrift.dto;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class StatWithG1Collector implements org.apache.thrift.TBase<StatWithG1Collector, StatWithG1Collector._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("StatWithG1Collector");

  private static final org.apache.thrift.protocol.TField AGENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("agentId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField TIMESTAMP_FIELD_DESC = new org.apache.thrift.protocol.TField("timestamp", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField JVM_MEMORY_TOTAL_USED_FIELD_DESC = new org.apache.thrift.protocol.TField("jvmMemoryTotalUsed", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField JVM_MEMORY_TOTAL_MAX_FIELD_DESC = new org.apache.thrift.protocol.TField("jvmMemoryTotalMax", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField JVM_MEMORY_HEAP_USED_FIELD_DESC = new org.apache.thrift.protocol.TField("jvmMemoryHeapUsed", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField JVM_MEMORY_HEAP_MAX_FIELD_DESC = new org.apache.thrift.protocol.TField("jvmMemoryHeapMax", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField JVM_MEMORY_NON_HEAP_USED_FIELD_DESC = new org.apache.thrift.protocol.TField("jvmMemoryNonHeapUsed", org.apache.thrift.protocol.TType.I64, (short)7);
  private static final org.apache.thrift.protocol.TField JVM_MEMORY_NON_HEAP_MAX_FIELD_DESC = new org.apache.thrift.protocol.TField("jvmMemoryNonHeapMax", org.apache.thrift.protocol.TType.I64, (short)8);
  private static final org.apache.thrift.protocol.TField JVM_MEMORY_POOLS_CODE_CACHE_USAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("jvmMemoryPoolsCodeCacheUsage", org.apache.thrift.protocol.TType.I64, (short)9);
  private static final org.apache.thrift.protocol.TField JVM_MEMORY_POOLS_G1_EDEN_SPACE_USAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("jvmMemoryPoolsG1EdenSpaceUsage", org.apache.thrift.protocol.TType.I64, (short)10);
  private static final org.apache.thrift.protocol.TField JVM_MEMORY_POOLS_G1_OLD_GEN_USAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("jvmMemoryPoolsG1OldGenUsage", org.apache.thrift.protocol.TType.I64, (short)11);
  private static final org.apache.thrift.protocol.TField JVM_MEMORY_POOLS_G1_PERM_GEN_USAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("jvmMemoryPoolsG1PermGenUsage", org.apache.thrift.protocol.TType.I64, (short)12);
  private static final org.apache.thrift.protocol.TField JVM_MEMORY_POOLS_G1_SURVIVOR_SPACE_USAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("jvmMemoryPoolsG1SurvivorSpaceUsage", org.apache.thrift.protocol.TType.I64, (short)13);
  private static final org.apache.thrift.protocol.TField JVM_GC_G1_OLD_GENERATION_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("jvmGcG1OldGenerationCount", org.apache.thrift.protocol.TType.I64, (short)14);
  private static final org.apache.thrift.protocol.TField JVM_GC_G1_OLD_GENERATION_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("jvmGcG1OldGenerationTime", org.apache.thrift.protocol.TType.I64, (short)15);
  private static final org.apache.thrift.protocol.TField JVM_GC_G1_YOUNG_GENERATION_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("jvmGcG1YoungGenerationCount", org.apache.thrift.protocol.TType.I64, (short)16);
  private static final org.apache.thrift.protocol.TField JVM_GC_G1_YOUNG_GENERATION_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("jvmGcG1YoungGenerationTime", org.apache.thrift.protocol.TType.I64, (short)17);
  private static final org.apache.thrift.protocol.TField METADATA_FIELD_DESC = new org.apache.thrift.protocol.TField("metadata", org.apache.thrift.protocol.TType.STRING, (short)200);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new StatWithG1CollectorStandardSchemeFactory());
    schemes.put(TupleScheme.class, new StatWithG1CollectorTupleSchemeFactory());
  }

  private String agentId; // required
  private long timestamp; // required
  private long jvmMemoryTotalUsed; // required
  private long jvmMemoryTotalMax; // required
  private long jvmMemoryHeapUsed; // required
  private long jvmMemoryHeapMax; // required
  private long jvmMemoryNonHeapUsed; // required
  private long jvmMemoryNonHeapMax; // required
  private long jvmMemoryPoolsCodeCacheUsage; // required
  private long jvmMemoryPoolsG1EdenSpaceUsage; // required
  private long jvmMemoryPoolsG1OldGenUsage; // required
  private long jvmMemoryPoolsG1PermGenUsage; // required
  private long jvmMemoryPoolsG1SurvivorSpaceUsage; // required
  private long jvmGcG1OldGenerationCount; // required
  private long jvmGcG1OldGenerationTime; // required
  private long jvmGcG1YoungGenerationCount; // required
  private long jvmGcG1YoungGenerationTime; // required
  private String metadata; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    AGENT_ID((short)1, "agentId"),
    TIMESTAMP((short)2, "timestamp"),
    JVM_MEMORY_TOTAL_USED((short)3, "jvmMemoryTotalUsed"),
    JVM_MEMORY_TOTAL_MAX((short)4, "jvmMemoryTotalMax"),
    JVM_MEMORY_HEAP_USED((short)5, "jvmMemoryHeapUsed"),
    JVM_MEMORY_HEAP_MAX((short)6, "jvmMemoryHeapMax"),
    JVM_MEMORY_NON_HEAP_USED((short)7, "jvmMemoryNonHeapUsed"),
    JVM_MEMORY_NON_HEAP_MAX((short)8, "jvmMemoryNonHeapMax"),
    JVM_MEMORY_POOLS_CODE_CACHE_USAGE((short)9, "jvmMemoryPoolsCodeCacheUsage"),
    JVM_MEMORY_POOLS_G1_EDEN_SPACE_USAGE((short)10, "jvmMemoryPoolsG1EdenSpaceUsage"),
    JVM_MEMORY_POOLS_G1_OLD_GEN_USAGE((short)11, "jvmMemoryPoolsG1OldGenUsage"),
    JVM_MEMORY_POOLS_G1_PERM_GEN_USAGE((short)12, "jvmMemoryPoolsG1PermGenUsage"),
    JVM_MEMORY_POOLS_G1_SURVIVOR_SPACE_USAGE((short)13, "jvmMemoryPoolsG1SurvivorSpaceUsage"),
    JVM_GC_G1_OLD_GENERATION_COUNT((short)14, "jvmGcG1OldGenerationCount"),
    JVM_GC_G1_OLD_GENERATION_TIME((short)15, "jvmGcG1OldGenerationTime"),
    JVM_GC_G1_YOUNG_GENERATION_COUNT((short)16, "jvmGcG1YoungGenerationCount"),
    JVM_GC_G1_YOUNG_GENERATION_TIME((short)17, "jvmGcG1YoungGenerationTime"),
    METADATA((short)200, "metadata");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // AGENT_ID
          return AGENT_ID;
        case 2: // TIMESTAMP
          return TIMESTAMP;
        case 3: // JVM_MEMORY_TOTAL_USED
          return JVM_MEMORY_TOTAL_USED;
        case 4: // JVM_MEMORY_TOTAL_MAX
          return JVM_MEMORY_TOTAL_MAX;
        case 5: // JVM_MEMORY_HEAP_USED
          return JVM_MEMORY_HEAP_USED;
        case 6: // JVM_MEMORY_HEAP_MAX
          return JVM_MEMORY_HEAP_MAX;
        case 7: // JVM_MEMORY_NON_HEAP_USED
          return JVM_MEMORY_NON_HEAP_USED;
        case 8: // JVM_MEMORY_NON_HEAP_MAX
          return JVM_MEMORY_NON_HEAP_MAX;
        case 9: // JVM_MEMORY_POOLS_CODE_CACHE_USAGE
          return JVM_MEMORY_POOLS_CODE_CACHE_USAGE;
        case 10: // JVM_MEMORY_POOLS_G1_EDEN_SPACE_USAGE
          return JVM_MEMORY_POOLS_G1_EDEN_SPACE_USAGE;
        case 11: // JVM_MEMORY_POOLS_G1_OLD_GEN_USAGE
          return JVM_MEMORY_POOLS_G1_OLD_GEN_USAGE;
        case 12: // JVM_MEMORY_POOLS_G1_PERM_GEN_USAGE
          return JVM_MEMORY_POOLS_G1_PERM_GEN_USAGE;
        case 13: // JVM_MEMORY_POOLS_G1_SURVIVOR_SPACE_USAGE
          return JVM_MEMORY_POOLS_G1_SURVIVOR_SPACE_USAGE;
        case 14: // JVM_GC_G1_OLD_GENERATION_COUNT
          return JVM_GC_G1_OLD_GENERATION_COUNT;
        case 15: // JVM_GC_G1_OLD_GENERATION_TIME
          return JVM_GC_G1_OLD_GENERATION_TIME;
        case 16: // JVM_GC_G1_YOUNG_GENERATION_COUNT
          return JVM_GC_G1_YOUNG_GENERATION_COUNT;
        case 17: // JVM_GC_G1_YOUNG_GENERATION_TIME
          return JVM_GC_G1_YOUNG_GENERATION_TIME;
        case 200: // METADATA
          return METADATA;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __TIMESTAMP_ISSET_ID = 0;
  private static final int __JVMMEMORYTOTALUSED_ISSET_ID = 1;
  private static final int __JVMMEMORYTOTALMAX_ISSET_ID = 2;
  private static final int __JVMMEMORYHEAPUSED_ISSET_ID = 3;
  private static final int __JVMMEMORYHEAPMAX_ISSET_ID = 4;
  private static final int __JVMMEMORYNONHEAPUSED_ISSET_ID = 5;
  private static final int __JVMMEMORYNONHEAPMAX_ISSET_ID = 6;
  private static final int __JVMMEMORYPOOLSCODECACHEUSAGE_ISSET_ID = 7;
  private static final int __JVMMEMORYPOOLSG1EDENSPACEUSAGE_ISSET_ID = 8;
  private static final int __JVMMEMORYPOOLSG1OLDGENUSAGE_ISSET_ID = 9;
  private static final int __JVMMEMORYPOOLSG1PERMGENUSAGE_ISSET_ID = 10;
  private static final int __JVMMEMORYPOOLSG1SURVIVORSPACEUSAGE_ISSET_ID = 11;
  private static final int __JVMGCG1OLDGENERATIONCOUNT_ISSET_ID = 12;
  private static final int __JVMGCG1OLDGENERATIONTIME_ISSET_ID = 13;
  private static final int __JVMGCG1YOUNGGENERATIONCOUNT_ISSET_ID = 14;
  private static final int __JVMGCG1YOUNGGENERATIONTIME_ISSET_ID = 15;
  private short __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.METADATA};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.AGENT_ID, new org.apache.thrift.meta_data.FieldMetaData("agentId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TIMESTAMP, new org.apache.thrift.meta_data.FieldMetaData("timestamp", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.JVM_MEMORY_TOTAL_USED, new org.apache.thrift.meta_data.FieldMetaData("jvmMemoryTotalUsed", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.JVM_MEMORY_TOTAL_MAX, new org.apache.thrift.meta_data.FieldMetaData("jvmMemoryTotalMax", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.JVM_MEMORY_HEAP_USED, new org.apache.thrift.meta_data.FieldMetaData("jvmMemoryHeapUsed", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.JVM_MEMORY_HEAP_MAX, new org.apache.thrift.meta_data.FieldMetaData("jvmMemoryHeapMax", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.JVM_MEMORY_NON_HEAP_USED, new org.apache.thrift.meta_data.FieldMetaData("jvmMemoryNonHeapUsed", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.JVM_MEMORY_NON_HEAP_MAX, new org.apache.thrift.meta_data.FieldMetaData("jvmMemoryNonHeapMax", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.JVM_MEMORY_POOLS_CODE_CACHE_USAGE, new org.apache.thrift.meta_data.FieldMetaData("jvmMemoryPoolsCodeCacheUsage", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.JVM_MEMORY_POOLS_G1_EDEN_SPACE_USAGE, new org.apache.thrift.meta_data.FieldMetaData("jvmMemoryPoolsG1EdenSpaceUsage", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.JVM_MEMORY_POOLS_G1_OLD_GEN_USAGE, new org.apache.thrift.meta_data.FieldMetaData("jvmMemoryPoolsG1OldGenUsage", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.JVM_MEMORY_POOLS_G1_PERM_GEN_USAGE, new org.apache.thrift.meta_data.FieldMetaData("jvmMemoryPoolsG1PermGenUsage", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.JVM_MEMORY_POOLS_G1_SURVIVOR_SPACE_USAGE, new org.apache.thrift.meta_data.FieldMetaData("jvmMemoryPoolsG1SurvivorSpaceUsage", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.JVM_GC_G1_OLD_GENERATION_COUNT, new org.apache.thrift.meta_data.FieldMetaData("jvmGcG1OldGenerationCount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.JVM_GC_G1_OLD_GENERATION_TIME, new org.apache.thrift.meta_data.FieldMetaData("jvmGcG1OldGenerationTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.JVM_GC_G1_YOUNG_GENERATION_COUNT, new org.apache.thrift.meta_data.FieldMetaData("jvmGcG1YoungGenerationCount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.JVM_GC_G1_YOUNG_GENERATION_TIME, new org.apache.thrift.meta_data.FieldMetaData("jvmGcG1YoungGenerationTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.METADATA, new org.apache.thrift.meta_data.FieldMetaData("metadata", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(StatWithG1Collector.class, metaDataMap);
  }

  public StatWithG1Collector() {
  }

  public StatWithG1Collector(
    String agentId,
    long timestamp,
    long jvmMemoryTotalUsed,
    long jvmMemoryTotalMax,
    long jvmMemoryHeapUsed,
    long jvmMemoryHeapMax,
    long jvmMemoryNonHeapUsed,
    long jvmMemoryNonHeapMax,
    long jvmMemoryPoolsCodeCacheUsage,
    long jvmMemoryPoolsG1EdenSpaceUsage,
    long jvmMemoryPoolsG1OldGenUsage,
    long jvmMemoryPoolsG1PermGenUsage,
    long jvmMemoryPoolsG1SurvivorSpaceUsage,
    long jvmGcG1OldGenerationCount,
    long jvmGcG1OldGenerationTime,
    long jvmGcG1YoungGenerationCount,
    long jvmGcG1YoungGenerationTime)
  {
    this();
    this.agentId = agentId;
    this.timestamp = timestamp;
    setTimestampIsSet(true);
    this.jvmMemoryTotalUsed = jvmMemoryTotalUsed;
    setJvmMemoryTotalUsedIsSet(true);
    this.jvmMemoryTotalMax = jvmMemoryTotalMax;
    setJvmMemoryTotalMaxIsSet(true);
    this.jvmMemoryHeapUsed = jvmMemoryHeapUsed;
    setJvmMemoryHeapUsedIsSet(true);
    this.jvmMemoryHeapMax = jvmMemoryHeapMax;
    setJvmMemoryHeapMaxIsSet(true);
    this.jvmMemoryNonHeapUsed = jvmMemoryNonHeapUsed;
    setJvmMemoryNonHeapUsedIsSet(true);
    this.jvmMemoryNonHeapMax = jvmMemoryNonHeapMax;
    setJvmMemoryNonHeapMaxIsSet(true);
    this.jvmMemoryPoolsCodeCacheUsage = jvmMemoryPoolsCodeCacheUsage;
    setJvmMemoryPoolsCodeCacheUsageIsSet(true);
    this.jvmMemoryPoolsG1EdenSpaceUsage = jvmMemoryPoolsG1EdenSpaceUsage;
    setJvmMemoryPoolsG1EdenSpaceUsageIsSet(true);
    this.jvmMemoryPoolsG1OldGenUsage = jvmMemoryPoolsG1OldGenUsage;
    setJvmMemoryPoolsG1OldGenUsageIsSet(true);
    this.jvmMemoryPoolsG1PermGenUsage = jvmMemoryPoolsG1PermGenUsage;
    setJvmMemoryPoolsG1PermGenUsageIsSet(true);
    this.jvmMemoryPoolsG1SurvivorSpaceUsage = jvmMemoryPoolsG1SurvivorSpaceUsage;
    setJvmMemoryPoolsG1SurvivorSpaceUsageIsSet(true);
    this.jvmGcG1OldGenerationCount = jvmGcG1OldGenerationCount;
    setJvmGcG1OldGenerationCountIsSet(true);
    this.jvmGcG1OldGenerationTime = jvmGcG1OldGenerationTime;
    setJvmGcG1OldGenerationTimeIsSet(true);
    this.jvmGcG1YoungGenerationCount = jvmGcG1YoungGenerationCount;
    setJvmGcG1YoungGenerationCountIsSet(true);
    this.jvmGcG1YoungGenerationTime = jvmGcG1YoungGenerationTime;
    setJvmGcG1YoungGenerationTimeIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public StatWithG1Collector(StatWithG1Collector other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetAgentId()) {
      this.agentId = other.agentId;
    }
    this.timestamp = other.timestamp;
    this.jvmMemoryTotalUsed = other.jvmMemoryTotalUsed;
    this.jvmMemoryTotalMax = other.jvmMemoryTotalMax;
    this.jvmMemoryHeapUsed = other.jvmMemoryHeapUsed;
    this.jvmMemoryHeapMax = other.jvmMemoryHeapMax;
    this.jvmMemoryNonHeapUsed = other.jvmMemoryNonHeapUsed;
    this.jvmMemoryNonHeapMax = other.jvmMemoryNonHeapMax;
    this.jvmMemoryPoolsCodeCacheUsage = other.jvmMemoryPoolsCodeCacheUsage;
    this.jvmMemoryPoolsG1EdenSpaceUsage = other.jvmMemoryPoolsG1EdenSpaceUsage;
    this.jvmMemoryPoolsG1OldGenUsage = other.jvmMemoryPoolsG1OldGenUsage;
    this.jvmMemoryPoolsG1PermGenUsage = other.jvmMemoryPoolsG1PermGenUsage;
    this.jvmMemoryPoolsG1SurvivorSpaceUsage = other.jvmMemoryPoolsG1SurvivorSpaceUsage;
    this.jvmGcG1OldGenerationCount = other.jvmGcG1OldGenerationCount;
    this.jvmGcG1OldGenerationTime = other.jvmGcG1OldGenerationTime;
    this.jvmGcG1YoungGenerationCount = other.jvmGcG1YoungGenerationCount;
    this.jvmGcG1YoungGenerationTime = other.jvmGcG1YoungGenerationTime;
    if (other.isSetMetadata()) {
      this.metadata = other.metadata;
    }
  }

  public StatWithG1Collector deepCopy() {
    return new StatWithG1Collector(this);
  }

  @Override
  public void clear() {
    this.agentId = null;
    setTimestampIsSet(false);
    this.timestamp = 0;
    setJvmMemoryTotalUsedIsSet(false);
    this.jvmMemoryTotalUsed = 0;
    setJvmMemoryTotalMaxIsSet(false);
    this.jvmMemoryTotalMax = 0;
    setJvmMemoryHeapUsedIsSet(false);
    this.jvmMemoryHeapUsed = 0;
    setJvmMemoryHeapMaxIsSet(false);
    this.jvmMemoryHeapMax = 0;
    setJvmMemoryNonHeapUsedIsSet(false);
    this.jvmMemoryNonHeapUsed = 0;
    setJvmMemoryNonHeapMaxIsSet(false);
    this.jvmMemoryNonHeapMax = 0;
    setJvmMemoryPoolsCodeCacheUsageIsSet(false);
    this.jvmMemoryPoolsCodeCacheUsage = 0;
    setJvmMemoryPoolsG1EdenSpaceUsageIsSet(false);
    this.jvmMemoryPoolsG1EdenSpaceUsage = 0;
    setJvmMemoryPoolsG1OldGenUsageIsSet(false);
    this.jvmMemoryPoolsG1OldGenUsage = 0;
    setJvmMemoryPoolsG1PermGenUsageIsSet(false);
    this.jvmMemoryPoolsG1PermGenUsage = 0;
    setJvmMemoryPoolsG1SurvivorSpaceUsageIsSet(false);
    this.jvmMemoryPoolsG1SurvivorSpaceUsage = 0;
    setJvmGcG1OldGenerationCountIsSet(false);
    this.jvmGcG1OldGenerationCount = 0;
    setJvmGcG1OldGenerationTimeIsSet(false);
    this.jvmGcG1OldGenerationTime = 0;
    setJvmGcG1YoungGenerationCountIsSet(false);
    this.jvmGcG1YoungGenerationCount = 0;
    setJvmGcG1YoungGenerationTimeIsSet(false);
    this.jvmGcG1YoungGenerationTime = 0;
    this.metadata = null;
  }

  public String getAgentId() {
    return this.agentId;
  }

  public void setAgentId(String agentId) {
    this.agentId = agentId;
  }

  public void unsetAgentId() {
    this.agentId = null;
  }

  /** Returns true if field agentId is set (has been assigned a value) and false otherwise */
  public boolean isSetAgentId() {
    return this.agentId != null;
  }

  public void setAgentIdIsSet(boolean value) {
    if (!value) {
      this.agentId = null;
    }
  }

  public long getTimestamp() {
    return this.timestamp;
  }

  public void setTimestamp(long timestamp) {
    this.timestamp = timestamp;
    setTimestampIsSet(true);
  }

  public void unsetTimestamp() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TIMESTAMP_ISSET_ID);
  }

  /** Returns true if field timestamp is set (has been assigned a value) and false otherwise */
  public boolean isSetTimestamp() {
    return EncodingUtils.testBit(__isset_bitfield, __TIMESTAMP_ISSET_ID);
  }

  public void setTimestampIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TIMESTAMP_ISSET_ID, value);
  }

  public long getJvmMemoryTotalUsed() {
    return this.jvmMemoryTotalUsed;
  }

  public void setJvmMemoryTotalUsed(long jvmMemoryTotalUsed) {
    this.jvmMemoryTotalUsed = jvmMemoryTotalUsed;
    setJvmMemoryTotalUsedIsSet(true);
  }

  public void unsetJvmMemoryTotalUsed() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __JVMMEMORYTOTALUSED_ISSET_ID);
  }

  /** Returns true if field jvmMemoryTotalUsed is set (has been assigned a value) and false otherwise */
  public boolean isSetJvmMemoryTotalUsed() {
    return EncodingUtils.testBit(__isset_bitfield, __JVMMEMORYTOTALUSED_ISSET_ID);
  }

  public void setJvmMemoryTotalUsedIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __JVMMEMORYTOTALUSED_ISSET_ID, value);
  }

  public long getJvmMemoryTotalMax() {
    return this.jvmMemoryTotalMax;
  }

  public void setJvmMemoryTotalMax(long jvmMemoryTotalMax) {
    this.jvmMemoryTotalMax = jvmMemoryTotalMax;
    setJvmMemoryTotalMaxIsSet(true);
  }

  public void unsetJvmMemoryTotalMax() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __JVMMEMORYTOTALMAX_ISSET_ID);
  }

  /** Returns true if field jvmMemoryTotalMax is set (has been assigned a value) and false otherwise */
  public boolean isSetJvmMemoryTotalMax() {
    return EncodingUtils.testBit(__isset_bitfield, __JVMMEMORYTOTALMAX_ISSET_ID);
  }

  public void setJvmMemoryTotalMaxIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __JVMMEMORYTOTALMAX_ISSET_ID, value);
  }

  public long getJvmMemoryHeapUsed() {
    return this.jvmMemoryHeapUsed;
  }

  public void setJvmMemoryHeapUsed(long jvmMemoryHeapUsed) {
    this.jvmMemoryHeapUsed = jvmMemoryHeapUsed;
    setJvmMemoryHeapUsedIsSet(true);
  }

  public void unsetJvmMemoryHeapUsed() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __JVMMEMORYHEAPUSED_ISSET_ID);
  }

  /** Returns true if field jvmMemoryHeapUsed is set (has been assigned a value) and false otherwise */
  public boolean isSetJvmMemoryHeapUsed() {
    return EncodingUtils.testBit(__isset_bitfield, __JVMMEMORYHEAPUSED_ISSET_ID);
  }

  public void setJvmMemoryHeapUsedIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __JVMMEMORYHEAPUSED_ISSET_ID, value);
  }

  public long getJvmMemoryHeapMax() {
    return this.jvmMemoryHeapMax;
  }

  public void setJvmMemoryHeapMax(long jvmMemoryHeapMax) {
    this.jvmMemoryHeapMax = jvmMemoryHeapMax;
    setJvmMemoryHeapMaxIsSet(true);
  }

  public void unsetJvmMemoryHeapMax() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __JVMMEMORYHEAPMAX_ISSET_ID);
  }

  /** Returns true if field jvmMemoryHeapMax is set (has been assigned a value) and false otherwise */
  public boolean isSetJvmMemoryHeapMax() {
    return EncodingUtils.testBit(__isset_bitfield, __JVMMEMORYHEAPMAX_ISSET_ID);
  }

  public void setJvmMemoryHeapMaxIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __JVMMEMORYHEAPMAX_ISSET_ID, value);
  }

  public long getJvmMemoryNonHeapUsed() {
    return this.jvmMemoryNonHeapUsed;
  }

  public void setJvmMemoryNonHeapUsed(long jvmMemoryNonHeapUsed) {
    this.jvmMemoryNonHeapUsed = jvmMemoryNonHeapUsed;
    setJvmMemoryNonHeapUsedIsSet(true);
  }

  public void unsetJvmMemoryNonHeapUsed() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __JVMMEMORYNONHEAPUSED_ISSET_ID);
  }

  /** Returns true if field jvmMemoryNonHeapUsed is set (has been assigned a value) and false otherwise */
  public boolean isSetJvmMemoryNonHeapUsed() {
    return EncodingUtils.testBit(__isset_bitfield, __JVMMEMORYNONHEAPUSED_ISSET_ID);
  }

  public void setJvmMemoryNonHeapUsedIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __JVMMEMORYNONHEAPUSED_ISSET_ID, value);
  }

  public long getJvmMemoryNonHeapMax() {
    return this.jvmMemoryNonHeapMax;
  }

  public void setJvmMemoryNonHeapMax(long jvmMemoryNonHeapMax) {
    this.jvmMemoryNonHeapMax = jvmMemoryNonHeapMax;
    setJvmMemoryNonHeapMaxIsSet(true);
  }

  public void unsetJvmMemoryNonHeapMax() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __JVMMEMORYNONHEAPMAX_ISSET_ID);
  }

  /** Returns true if field jvmMemoryNonHeapMax is set (has been assigned a value) and false otherwise */
  public boolean isSetJvmMemoryNonHeapMax() {
    return EncodingUtils.testBit(__isset_bitfield, __JVMMEMORYNONHEAPMAX_ISSET_ID);
  }

  public void setJvmMemoryNonHeapMaxIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __JVMMEMORYNONHEAPMAX_ISSET_ID, value);
  }

  public long getJvmMemoryPoolsCodeCacheUsage() {
    return this.jvmMemoryPoolsCodeCacheUsage;
  }

  public void setJvmMemoryPoolsCodeCacheUsage(long jvmMemoryPoolsCodeCacheUsage) {
    this.jvmMemoryPoolsCodeCacheUsage = jvmMemoryPoolsCodeCacheUsage;
    setJvmMemoryPoolsCodeCacheUsageIsSet(true);
  }

  public void unsetJvmMemoryPoolsCodeCacheUsage() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __JVMMEMORYPOOLSCODECACHEUSAGE_ISSET_ID);
  }

  /** Returns true if field jvmMemoryPoolsCodeCacheUsage is set (has been assigned a value) and false otherwise */
  public boolean isSetJvmMemoryPoolsCodeCacheUsage() {
    return EncodingUtils.testBit(__isset_bitfield, __JVMMEMORYPOOLSCODECACHEUSAGE_ISSET_ID);
  }

  public void setJvmMemoryPoolsCodeCacheUsageIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __JVMMEMORYPOOLSCODECACHEUSAGE_ISSET_ID, value);
  }

  public long getJvmMemoryPoolsG1EdenSpaceUsage() {
    return this.jvmMemoryPoolsG1EdenSpaceUsage;
  }

  public void setJvmMemoryPoolsG1EdenSpaceUsage(long jvmMemoryPoolsG1EdenSpaceUsage) {
    this.jvmMemoryPoolsG1EdenSpaceUsage = jvmMemoryPoolsG1EdenSpaceUsage;
    setJvmMemoryPoolsG1EdenSpaceUsageIsSet(true);
  }

  public void unsetJvmMemoryPoolsG1EdenSpaceUsage() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __JVMMEMORYPOOLSG1EDENSPACEUSAGE_ISSET_ID);
  }

  /** Returns true if field jvmMemoryPoolsG1EdenSpaceUsage is set (has been assigned a value) and false otherwise */
  public boolean isSetJvmMemoryPoolsG1EdenSpaceUsage() {
    return EncodingUtils.testBit(__isset_bitfield, __JVMMEMORYPOOLSG1EDENSPACEUSAGE_ISSET_ID);
  }

  public void setJvmMemoryPoolsG1EdenSpaceUsageIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __JVMMEMORYPOOLSG1EDENSPACEUSAGE_ISSET_ID, value);
  }

  public long getJvmMemoryPoolsG1OldGenUsage() {
    return this.jvmMemoryPoolsG1OldGenUsage;
  }

  public void setJvmMemoryPoolsG1OldGenUsage(long jvmMemoryPoolsG1OldGenUsage) {
    this.jvmMemoryPoolsG1OldGenUsage = jvmMemoryPoolsG1OldGenUsage;
    setJvmMemoryPoolsG1OldGenUsageIsSet(true);
  }

  public void unsetJvmMemoryPoolsG1OldGenUsage() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __JVMMEMORYPOOLSG1OLDGENUSAGE_ISSET_ID);
  }

  /** Returns true if field jvmMemoryPoolsG1OldGenUsage is set (has been assigned a value) and false otherwise */
  public boolean isSetJvmMemoryPoolsG1OldGenUsage() {
    return EncodingUtils.testBit(__isset_bitfield, __JVMMEMORYPOOLSG1OLDGENUSAGE_ISSET_ID);
  }

  public void setJvmMemoryPoolsG1OldGenUsageIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __JVMMEMORYPOOLSG1OLDGENUSAGE_ISSET_ID, value);
  }

  public long getJvmMemoryPoolsG1PermGenUsage() {
    return this.jvmMemoryPoolsG1PermGenUsage;
  }

  public void setJvmMemoryPoolsG1PermGenUsage(long jvmMemoryPoolsG1PermGenUsage) {
    this.jvmMemoryPoolsG1PermGenUsage = jvmMemoryPoolsG1PermGenUsage;
    setJvmMemoryPoolsG1PermGenUsageIsSet(true);
  }

  public void unsetJvmMemoryPoolsG1PermGenUsage() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __JVMMEMORYPOOLSG1PERMGENUSAGE_ISSET_ID);
  }

  /** Returns true if field jvmMemoryPoolsG1PermGenUsage is set (has been assigned a value) and false otherwise */
  public boolean isSetJvmMemoryPoolsG1PermGenUsage() {
    return EncodingUtils.testBit(__isset_bitfield, __JVMMEMORYPOOLSG1PERMGENUSAGE_ISSET_ID);
  }

  public void setJvmMemoryPoolsG1PermGenUsageIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __JVMMEMORYPOOLSG1PERMGENUSAGE_ISSET_ID, value);
  }

  public long getJvmMemoryPoolsG1SurvivorSpaceUsage() {
    return this.jvmMemoryPoolsG1SurvivorSpaceUsage;
  }

  public void setJvmMemoryPoolsG1SurvivorSpaceUsage(long jvmMemoryPoolsG1SurvivorSpaceUsage) {
    this.jvmMemoryPoolsG1SurvivorSpaceUsage = jvmMemoryPoolsG1SurvivorSpaceUsage;
    setJvmMemoryPoolsG1SurvivorSpaceUsageIsSet(true);
  }

  public void unsetJvmMemoryPoolsG1SurvivorSpaceUsage() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __JVMMEMORYPOOLSG1SURVIVORSPACEUSAGE_ISSET_ID);
  }

  /** Returns true if field jvmMemoryPoolsG1SurvivorSpaceUsage is set (has been assigned a value) and false otherwise */
  public boolean isSetJvmMemoryPoolsG1SurvivorSpaceUsage() {
    return EncodingUtils.testBit(__isset_bitfield, __JVMMEMORYPOOLSG1SURVIVORSPACEUSAGE_ISSET_ID);
  }

  public void setJvmMemoryPoolsG1SurvivorSpaceUsageIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __JVMMEMORYPOOLSG1SURVIVORSPACEUSAGE_ISSET_ID, value);
  }

  public long getJvmGcG1OldGenerationCount() {
    return this.jvmGcG1OldGenerationCount;
  }

  public void setJvmGcG1OldGenerationCount(long jvmGcG1OldGenerationCount) {
    this.jvmGcG1OldGenerationCount = jvmGcG1OldGenerationCount;
    setJvmGcG1OldGenerationCountIsSet(true);
  }

  public void unsetJvmGcG1OldGenerationCount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __JVMGCG1OLDGENERATIONCOUNT_ISSET_ID);
  }

  /** Returns true if field jvmGcG1OldGenerationCount is set (has been assigned a value) and false otherwise */
  public boolean isSetJvmGcG1OldGenerationCount() {
    return EncodingUtils.testBit(__isset_bitfield, __JVMGCG1OLDGENERATIONCOUNT_ISSET_ID);
  }

  public void setJvmGcG1OldGenerationCountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __JVMGCG1OLDGENERATIONCOUNT_ISSET_ID, value);
  }

  public long getJvmGcG1OldGenerationTime() {
    return this.jvmGcG1OldGenerationTime;
  }

  public void setJvmGcG1OldGenerationTime(long jvmGcG1OldGenerationTime) {
    this.jvmGcG1OldGenerationTime = jvmGcG1OldGenerationTime;
    setJvmGcG1OldGenerationTimeIsSet(true);
  }

  public void unsetJvmGcG1OldGenerationTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __JVMGCG1OLDGENERATIONTIME_ISSET_ID);
  }

  /** Returns true if field jvmGcG1OldGenerationTime is set (has been assigned a value) and false otherwise */
  public boolean isSetJvmGcG1OldGenerationTime() {
    return EncodingUtils.testBit(__isset_bitfield, __JVMGCG1OLDGENERATIONTIME_ISSET_ID);
  }

  public void setJvmGcG1OldGenerationTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __JVMGCG1OLDGENERATIONTIME_ISSET_ID, value);
  }

  public long getJvmGcG1YoungGenerationCount() {
    return this.jvmGcG1YoungGenerationCount;
  }

  public void setJvmGcG1YoungGenerationCount(long jvmGcG1YoungGenerationCount) {
    this.jvmGcG1YoungGenerationCount = jvmGcG1YoungGenerationCount;
    setJvmGcG1YoungGenerationCountIsSet(true);
  }

  public void unsetJvmGcG1YoungGenerationCount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __JVMGCG1YOUNGGENERATIONCOUNT_ISSET_ID);
  }

  /** Returns true if field jvmGcG1YoungGenerationCount is set (has been assigned a value) and false otherwise */
  public boolean isSetJvmGcG1YoungGenerationCount() {
    return EncodingUtils.testBit(__isset_bitfield, __JVMGCG1YOUNGGENERATIONCOUNT_ISSET_ID);
  }

  public void setJvmGcG1YoungGenerationCountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __JVMGCG1YOUNGGENERATIONCOUNT_ISSET_ID, value);
  }

  public long getJvmGcG1YoungGenerationTime() {
    return this.jvmGcG1YoungGenerationTime;
  }

  public void setJvmGcG1YoungGenerationTime(long jvmGcG1YoungGenerationTime) {
    this.jvmGcG1YoungGenerationTime = jvmGcG1YoungGenerationTime;
    setJvmGcG1YoungGenerationTimeIsSet(true);
  }

  public void unsetJvmGcG1YoungGenerationTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __JVMGCG1YOUNGGENERATIONTIME_ISSET_ID);
  }

  /** Returns true if field jvmGcG1YoungGenerationTime is set (has been assigned a value) and false otherwise */
  public boolean isSetJvmGcG1YoungGenerationTime() {
    return EncodingUtils.testBit(__isset_bitfield, __JVMGCG1YOUNGGENERATIONTIME_ISSET_ID);
  }

  public void setJvmGcG1YoungGenerationTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __JVMGCG1YOUNGGENERATIONTIME_ISSET_ID, value);
  }

  public String getMetadata() {
    return this.metadata;
  }

  public void setMetadata(String metadata) {
    this.metadata = metadata;
  }

  public void unsetMetadata() {
    this.metadata = null;
  }

  /** Returns true if field metadata is set (has been assigned a value) and false otherwise */
  public boolean isSetMetadata() {
    return this.metadata != null;
  }

  public void setMetadataIsSet(boolean value) {
    if (!value) {
      this.metadata = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case AGENT_ID:
      if (value == null) {
        unsetAgentId();
      } else {
        setAgentId((String)value);
      }
      break;

    case TIMESTAMP:
      if (value == null) {
        unsetTimestamp();
      } else {
        setTimestamp((Long)value);
      }
      break;

    case JVM_MEMORY_TOTAL_USED:
      if (value == null) {
        unsetJvmMemoryTotalUsed();
      } else {
        setJvmMemoryTotalUsed((Long)value);
      }
      break;

    case JVM_MEMORY_TOTAL_MAX:
      if (value == null) {
        unsetJvmMemoryTotalMax();
      } else {
        setJvmMemoryTotalMax((Long)value);
      }
      break;

    case JVM_MEMORY_HEAP_USED:
      if (value == null) {
        unsetJvmMemoryHeapUsed();
      } else {
        setJvmMemoryHeapUsed((Long)value);
      }
      break;

    case JVM_MEMORY_HEAP_MAX:
      if (value == null) {
        unsetJvmMemoryHeapMax();
      } else {
        setJvmMemoryHeapMax((Long)value);
      }
      break;

    case JVM_MEMORY_NON_HEAP_USED:
      if (value == null) {
        unsetJvmMemoryNonHeapUsed();
      } else {
        setJvmMemoryNonHeapUsed((Long)value);
      }
      break;

    case JVM_MEMORY_NON_HEAP_MAX:
      if (value == null) {
        unsetJvmMemoryNonHeapMax();
      } else {
        setJvmMemoryNonHeapMax((Long)value);
      }
      break;

    case JVM_MEMORY_POOLS_CODE_CACHE_USAGE:
      if (value == null) {
        unsetJvmMemoryPoolsCodeCacheUsage();
      } else {
        setJvmMemoryPoolsCodeCacheUsage((Long)value);
      }
      break;

    case JVM_MEMORY_POOLS_G1_EDEN_SPACE_USAGE:
      if (value == null) {
        unsetJvmMemoryPoolsG1EdenSpaceUsage();
      } else {
        setJvmMemoryPoolsG1EdenSpaceUsage((Long)value);
      }
      break;

    case JVM_MEMORY_POOLS_G1_OLD_GEN_USAGE:
      if (value == null) {
        unsetJvmMemoryPoolsG1OldGenUsage();
      } else {
        setJvmMemoryPoolsG1OldGenUsage((Long)value);
      }
      break;

    case JVM_MEMORY_POOLS_G1_PERM_GEN_USAGE:
      if (value == null) {
        unsetJvmMemoryPoolsG1PermGenUsage();
      } else {
        setJvmMemoryPoolsG1PermGenUsage((Long)value);
      }
      break;

    case JVM_MEMORY_POOLS_G1_SURVIVOR_SPACE_USAGE:
      if (value == null) {
        unsetJvmMemoryPoolsG1SurvivorSpaceUsage();
      } else {
        setJvmMemoryPoolsG1SurvivorSpaceUsage((Long)value);
      }
      break;

    case JVM_GC_G1_OLD_GENERATION_COUNT:
      if (value == null) {
        unsetJvmGcG1OldGenerationCount();
      } else {
        setJvmGcG1OldGenerationCount((Long)value);
      }
      break;

    case JVM_GC_G1_OLD_GENERATION_TIME:
      if (value == null) {
        unsetJvmGcG1OldGenerationTime();
      } else {
        setJvmGcG1OldGenerationTime((Long)value);
      }
      break;

    case JVM_GC_G1_YOUNG_GENERATION_COUNT:
      if (value == null) {
        unsetJvmGcG1YoungGenerationCount();
      } else {
        setJvmGcG1YoungGenerationCount((Long)value);
      }
      break;

    case JVM_GC_G1_YOUNG_GENERATION_TIME:
      if (value == null) {
        unsetJvmGcG1YoungGenerationTime();
      } else {
        setJvmGcG1YoungGenerationTime((Long)value);
      }
      break;

    case METADATA:
      if (value == null) {
        unsetMetadata();
      } else {
        setMetadata((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case AGENT_ID:
      return getAgentId();

    case TIMESTAMP:
      return Long.valueOf(getTimestamp());

    case JVM_MEMORY_TOTAL_USED:
      return Long.valueOf(getJvmMemoryTotalUsed());

    case JVM_MEMORY_TOTAL_MAX:
      return Long.valueOf(getJvmMemoryTotalMax());

    case JVM_MEMORY_HEAP_USED:
      return Long.valueOf(getJvmMemoryHeapUsed());

    case JVM_MEMORY_HEAP_MAX:
      return Long.valueOf(getJvmMemoryHeapMax());

    case JVM_MEMORY_NON_HEAP_USED:
      return Long.valueOf(getJvmMemoryNonHeapUsed());

    case JVM_MEMORY_NON_HEAP_MAX:
      return Long.valueOf(getJvmMemoryNonHeapMax());

    case JVM_MEMORY_POOLS_CODE_CACHE_USAGE:
      return Long.valueOf(getJvmMemoryPoolsCodeCacheUsage());

    case JVM_MEMORY_POOLS_G1_EDEN_SPACE_USAGE:
      return Long.valueOf(getJvmMemoryPoolsG1EdenSpaceUsage());

    case JVM_MEMORY_POOLS_G1_OLD_GEN_USAGE:
      return Long.valueOf(getJvmMemoryPoolsG1OldGenUsage());

    case JVM_MEMORY_POOLS_G1_PERM_GEN_USAGE:
      return Long.valueOf(getJvmMemoryPoolsG1PermGenUsage());

    case JVM_MEMORY_POOLS_G1_SURVIVOR_SPACE_USAGE:
      return Long.valueOf(getJvmMemoryPoolsG1SurvivorSpaceUsage());

    case JVM_GC_G1_OLD_GENERATION_COUNT:
      return Long.valueOf(getJvmGcG1OldGenerationCount());

    case JVM_GC_G1_OLD_GENERATION_TIME:
      return Long.valueOf(getJvmGcG1OldGenerationTime());

    case JVM_GC_G1_YOUNG_GENERATION_COUNT:
      return Long.valueOf(getJvmGcG1YoungGenerationCount());

    case JVM_GC_G1_YOUNG_GENERATION_TIME:
      return Long.valueOf(getJvmGcG1YoungGenerationTime());

    case METADATA:
      return getMetadata();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case AGENT_ID:
      return isSetAgentId();
    case TIMESTAMP:
      return isSetTimestamp();
    case JVM_MEMORY_TOTAL_USED:
      return isSetJvmMemoryTotalUsed();
    case JVM_MEMORY_TOTAL_MAX:
      return isSetJvmMemoryTotalMax();
    case JVM_MEMORY_HEAP_USED:
      return isSetJvmMemoryHeapUsed();
    case JVM_MEMORY_HEAP_MAX:
      return isSetJvmMemoryHeapMax();
    case JVM_MEMORY_NON_HEAP_USED:
      return isSetJvmMemoryNonHeapUsed();
    case JVM_MEMORY_NON_HEAP_MAX:
      return isSetJvmMemoryNonHeapMax();
    case JVM_MEMORY_POOLS_CODE_CACHE_USAGE:
      return isSetJvmMemoryPoolsCodeCacheUsage();
    case JVM_MEMORY_POOLS_G1_EDEN_SPACE_USAGE:
      return isSetJvmMemoryPoolsG1EdenSpaceUsage();
    case JVM_MEMORY_POOLS_G1_OLD_GEN_USAGE:
      return isSetJvmMemoryPoolsG1OldGenUsage();
    case JVM_MEMORY_POOLS_G1_PERM_GEN_USAGE:
      return isSetJvmMemoryPoolsG1PermGenUsage();
    case JVM_MEMORY_POOLS_G1_SURVIVOR_SPACE_USAGE:
      return isSetJvmMemoryPoolsG1SurvivorSpaceUsage();
    case JVM_GC_G1_OLD_GENERATION_COUNT:
      return isSetJvmGcG1OldGenerationCount();
    case JVM_GC_G1_OLD_GENERATION_TIME:
      return isSetJvmGcG1OldGenerationTime();
    case JVM_GC_G1_YOUNG_GENERATION_COUNT:
      return isSetJvmGcG1YoungGenerationCount();
    case JVM_GC_G1_YOUNG_GENERATION_TIME:
      return isSetJvmGcG1YoungGenerationTime();
    case METADATA:
      return isSetMetadata();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof StatWithG1Collector)
      return this.equals((StatWithG1Collector)that);
    return false;
  }

  public boolean equals(StatWithG1Collector that) {
    if (that == null)
      return false;

    boolean this_present_agentId = true && this.isSetAgentId();
    boolean that_present_agentId = true && that.isSetAgentId();
    if (this_present_agentId || that_present_agentId) {
      if (!(this_present_agentId && that_present_agentId))
        return false;
      if (!this.agentId.equals(that.agentId))
        return false;
    }

    boolean this_present_timestamp = true;
    boolean that_present_timestamp = true;
    if (this_present_timestamp || that_present_timestamp) {
      if (!(this_present_timestamp && that_present_timestamp))
        return false;
      if (this.timestamp != that.timestamp)
        return false;
    }

    boolean this_present_jvmMemoryTotalUsed = true;
    boolean that_present_jvmMemoryTotalUsed = true;
    if (this_present_jvmMemoryTotalUsed || that_present_jvmMemoryTotalUsed) {
      if (!(this_present_jvmMemoryTotalUsed && that_present_jvmMemoryTotalUsed))
        return false;
      if (this.jvmMemoryTotalUsed != that.jvmMemoryTotalUsed)
        return false;
    }

    boolean this_present_jvmMemoryTotalMax = true;
    boolean that_present_jvmMemoryTotalMax = true;
    if (this_present_jvmMemoryTotalMax || that_present_jvmMemoryTotalMax) {
      if (!(this_present_jvmMemoryTotalMax && that_present_jvmMemoryTotalMax))
        return false;
      if (this.jvmMemoryTotalMax != that.jvmMemoryTotalMax)
        return false;
    }

    boolean this_present_jvmMemoryHeapUsed = true;
    boolean that_present_jvmMemoryHeapUsed = true;
    if (this_present_jvmMemoryHeapUsed || that_present_jvmMemoryHeapUsed) {
      if (!(this_present_jvmMemoryHeapUsed && that_present_jvmMemoryHeapUsed))
        return false;
      if (this.jvmMemoryHeapUsed != that.jvmMemoryHeapUsed)
        return false;
    }

    boolean this_present_jvmMemoryHeapMax = true;
    boolean that_present_jvmMemoryHeapMax = true;
    if (this_present_jvmMemoryHeapMax || that_present_jvmMemoryHeapMax) {
      if (!(this_present_jvmMemoryHeapMax && that_present_jvmMemoryHeapMax))
        return false;
      if (this.jvmMemoryHeapMax != that.jvmMemoryHeapMax)
        return false;
    }

    boolean this_present_jvmMemoryNonHeapUsed = true;
    boolean that_present_jvmMemoryNonHeapUsed = true;
    if (this_present_jvmMemoryNonHeapUsed || that_present_jvmMemoryNonHeapUsed) {
      if (!(this_present_jvmMemoryNonHeapUsed && that_present_jvmMemoryNonHeapUsed))
        return false;
      if (this.jvmMemoryNonHeapUsed != that.jvmMemoryNonHeapUsed)
        return false;
    }

    boolean this_present_jvmMemoryNonHeapMax = true;
    boolean that_present_jvmMemoryNonHeapMax = true;
    if (this_present_jvmMemoryNonHeapMax || that_present_jvmMemoryNonHeapMax) {
      if (!(this_present_jvmMemoryNonHeapMax && that_present_jvmMemoryNonHeapMax))
        return false;
      if (this.jvmMemoryNonHeapMax != that.jvmMemoryNonHeapMax)
        return false;
    }

    boolean this_present_jvmMemoryPoolsCodeCacheUsage = true;
    boolean that_present_jvmMemoryPoolsCodeCacheUsage = true;
    if (this_present_jvmMemoryPoolsCodeCacheUsage || that_present_jvmMemoryPoolsCodeCacheUsage) {
      if (!(this_present_jvmMemoryPoolsCodeCacheUsage && that_present_jvmMemoryPoolsCodeCacheUsage))
        return false;
      if (this.jvmMemoryPoolsCodeCacheUsage != that.jvmMemoryPoolsCodeCacheUsage)
        return false;
    }

    boolean this_present_jvmMemoryPoolsG1EdenSpaceUsage = true;
    boolean that_present_jvmMemoryPoolsG1EdenSpaceUsage = true;
    if (this_present_jvmMemoryPoolsG1EdenSpaceUsage || that_present_jvmMemoryPoolsG1EdenSpaceUsage) {
      if (!(this_present_jvmMemoryPoolsG1EdenSpaceUsage && that_present_jvmMemoryPoolsG1EdenSpaceUsage))
        return false;
      if (this.jvmMemoryPoolsG1EdenSpaceUsage != that.jvmMemoryPoolsG1EdenSpaceUsage)
        return false;
    }

    boolean this_present_jvmMemoryPoolsG1OldGenUsage = true;
    boolean that_present_jvmMemoryPoolsG1OldGenUsage = true;
    if (this_present_jvmMemoryPoolsG1OldGenUsage || that_present_jvmMemoryPoolsG1OldGenUsage) {
      if (!(this_present_jvmMemoryPoolsG1OldGenUsage && that_present_jvmMemoryPoolsG1OldGenUsage))
        return false;
      if (this.jvmMemoryPoolsG1OldGenUsage != that.jvmMemoryPoolsG1OldGenUsage)
        return false;
    }

    boolean this_present_jvmMemoryPoolsG1PermGenUsage = true;
    boolean that_present_jvmMemoryPoolsG1PermGenUsage = true;
    if (this_present_jvmMemoryPoolsG1PermGenUsage || that_present_jvmMemoryPoolsG1PermGenUsage) {
      if (!(this_present_jvmMemoryPoolsG1PermGenUsage && that_present_jvmMemoryPoolsG1PermGenUsage))
        return false;
      if (this.jvmMemoryPoolsG1PermGenUsage != that.jvmMemoryPoolsG1PermGenUsage)
        return false;
    }

    boolean this_present_jvmMemoryPoolsG1SurvivorSpaceUsage = true;
    boolean that_present_jvmMemoryPoolsG1SurvivorSpaceUsage = true;
    if (this_present_jvmMemoryPoolsG1SurvivorSpaceUsage || that_present_jvmMemoryPoolsG1SurvivorSpaceUsage) {
      if (!(this_present_jvmMemoryPoolsG1SurvivorSpaceUsage && that_present_jvmMemoryPoolsG1SurvivorSpaceUsage))
        return false;
      if (this.jvmMemoryPoolsG1SurvivorSpaceUsage != that.jvmMemoryPoolsG1SurvivorSpaceUsage)
        return false;
    }

    boolean this_present_jvmGcG1OldGenerationCount = true;
    boolean that_present_jvmGcG1OldGenerationCount = true;
    if (this_present_jvmGcG1OldGenerationCount || that_present_jvmGcG1OldGenerationCount) {
      if (!(this_present_jvmGcG1OldGenerationCount && that_present_jvmGcG1OldGenerationCount))
        return false;
      if (this.jvmGcG1OldGenerationCount != that.jvmGcG1OldGenerationCount)
        return false;
    }

    boolean this_present_jvmGcG1OldGenerationTime = true;
    boolean that_present_jvmGcG1OldGenerationTime = true;
    if (this_present_jvmGcG1OldGenerationTime || that_present_jvmGcG1OldGenerationTime) {
      if (!(this_present_jvmGcG1OldGenerationTime && that_present_jvmGcG1OldGenerationTime))
        return false;
      if (this.jvmGcG1OldGenerationTime != that.jvmGcG1OldGenerationTime)
        return false;
    }

    boolean this_present_jvmGcG1YoungGenerationCount = true;
    boolean that_present_jvmGcG1YoungGenerationCount = true;
    if (this_present_jvmGcG1YoungGenerationCount || that_present_jvmGcG1YoungGenerationCount) {
      if (!(this_present_jvmGcG1YoungGenerationCount && that_present_jvmGcG1YoungGenerationCount))
        return false;
      if (this.jvmGcG1YoungGenerationCount != that.jvmGcG1YoungGenerationCount)
        return false;
    }

    boolean this_present_jvmGcG1YoungGenerationTime = true;
    boolean that_present_jvmGcG1YoungGenerationTime = true;
    if (this_present_jvmGcG1YoungGenerationTime || that_present_jvmGcG1YoungGenerationTime) {
      if (!(this_present_jvmGcG1YoungGenerationTime && that_present_jvmGcG1YoungGenerationTime))
        return false;
      if (this.jvmGcG1YoungGenerationTime != that.jvmGcG1YoungGenerationTime)
        return false;
    }

    boolean this_present_metadata = true && this.isSetMetadata();
    boolean that_present_metadata = true && that.isSetMetadata();
    if (this_present_metadata || that_present_metadata) {
      if (!(this_present_metadata && that_present_metadata))
        return false;
      if (!this.metadata.equals(that.metadata))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(StatWithG1Collector other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    StatWithG1Collector typedOther = (StatWithG1Collector)other;

    lastComparison = Boolean.valueOf(isSetAgentId()).compareTo(typedOther.isSetAgentId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAgentId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.agentId, typedOther.agentId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTimestamp()).compareTo(typedOther.isSetTimestamp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTimestamp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.timestamp, typedOther.timestamp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJvmMemoryTotalUsed()).compareTo(typedOther.isSetJvmMemoryTotalUsed());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJvmMemoryTotalUsed()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryTotalUsed, typedOther.jvmMemoryTotalUsed);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJvmMemoryTotalMax()).compareTo(typedOther.isSetJvmMemoryTotalMax());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJvmMemoryTotalMax()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryTotalMax, typedOther.jvmMemoryTotalMax);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJvmMemoryHeapUsed()).compareTo(typedOther.isSetJvmMemoryHeapUsed());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJvmMemoryHeapUsed()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryHeapUsed, typedOther.jvmMemoryHeapUsed);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJvmMemoryHeapMax()).compareTo(typedOther.isSetJvmMemoryHeapMax());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJvmMemoryHeapMax()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryHeapMax, typedOther.jvmMemoryHeapMax);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJvmMemoryNonHeapUsed()).compareTo(typedOther.isSetJvmMemoryNonHeapUsed());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJvmMemoryNonHeapUsed()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryNonHeapUsed, typedOther.jvmMemoryNonHeapUsed);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJvmMemoryNonHeapMax()).compareTo(typedOther.isSetJvmMemoryNonHeapMax());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJvmMemoryNonHeapMax()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryNonHeapMax, typedOther.jvmMemoryNonHeapMax);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJvmMemoryPoolsCodeCacheUsage()).compareTo(typedOther.isSetJvmMemoryPoolsCodeCacheUsage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJvmMemoryPoolsCodeCacheUsage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryPoolsCodeCacheUsage, typedOther.jvmMemoryPoolsCodeCacheUsage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJvmMemoryPoolsG1EdenSpaceUsage()).compareTo(typedOther.isSetJvmMemoryPoolsG1EdenSpaceUsage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJvmMemoryPoolsG1EdenSpaceUsage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryPoolsG1EdenSpaceUsage, typedOther.jvmMemoryPoolsG1EdenSpaceUsage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJvmMemoryPoolsG1OldGenUsage()).compareTo(typedOther.isSetJvmMemoryPoolsG1OldGenUsage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJvmMemoryPoolsG1OldGenUsage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryPoolsG1OldGenUsage, typedOther.jvmMemoryPoolsG1OldGenUsage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJvmMemoryPoolsG1PermGenUsage()).compareTo(typedOther.isSetJvmMemoryPoolsG1PermGenUsage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJvmMemoryPoolsG1PermGenUsage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryPoolsG1PermGenUsage, typedOther.jvmMemoryPoolsG1PermGenUsage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJvmMemoryPoolsG1SurvivorSpaceUsage()).compareTo(typedOther.isSetJvmMemoryPoolsG1SurvivorSpaceUsage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJvmMemoryPoolsG1SurvivorSpaceUsage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryPoolsG1SurvivorSpaceUsage, typedOther.jvmMemoryPoolsG1SurvivorSpaceUsage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJvmGcG1OldGenerationCount()).compareTo(typedOther.isSetJvmGcG1OldGenerationCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJvmGcG1OldGenerationCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jvmGcG1OldGenerationCount, typedOther.jvmGcG1OldGenerationCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJvmGcG1OldGenerationTime()).compareTo(typedOther.isSetJvmGcG1OldGenerationTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJvmGcG1OldGenerationTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jvmGcG1OldGenerationTime, typedOther.jvmGcG1OldGenerationTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJvmGcG1YoungGenerationCount()).compareTo(typedOther.isSetJvmGcG1YoungGenerationCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJvmGcG1YoungGenerationCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jvmGcG1YoungGenerationCount, typedOther.jvmGcG1YoungGenerationCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJvmGcG1YoungGenerationTime()).compareTo(typedOther.isSetJvmGcG1YoungGenerationTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJvmGcG1YoungGenerationTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jvmGcG1YoungGenerationTime, typedOther.jvmGcG1YoungGenerationTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMetadata()).compareTo(typedOther.isSetMetadata());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMetadata()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.metadata, typedOther.metadata);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("StatWithG1Collector(");
    boolean first = true;

    sb.append("agentId:");
    if (this.agentId == null) {
      sb.append("null");
    } else {
      sb.append(this.agentId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("timestamp:");
    sb.append(this.timestamp);
    first = false;
    if (!first) sb.append(", ");
    sb.append("jvmMemoryTotalUsed:");
    sb.append(this.jvmMemoryTotalUsed);
    first = false;
    if (!first) sb.append(", ");
    sb.append("jvmMemoryTotalMax:");
    sb.append(this.jvmMemoryTotalMax);
    first = false;
    if (!first) sb.append(", ");
    sb.append("jvmMemoryHeapUsed:");
    sb.append(this.jvmMemoryHeapUsed);
    first = false;
    if (!first) sb.append(", ");
    sb.append("jvmMemoryHeapMax:");
    sb.append(this.jvmMemoryHeapMax);
    first = false;
    if (!first) sb.append(", ");
    sb.append("jvmMemoryNonHeapUsed:");
    sb.append(this.jvmMemoryNonHeapUsed);
    first = false;
    if (!first) sb.append(", ");
    sb.append("jvmMemoryNonHeapMax:");
    sb.append(this.jvmMemoryNonHeapMax);
    first = false;
    if (!first) sb.append(", ");
    sb.append("jvmMemoryPoolsCodeCacheUsage:");
    sb.append(this.jvmMemoryPoolsCodeCacheUsage);
    first = false;
    if (!first) sb.append(", ");
    sb.append("jvmMemoryPoolsG1EdenSpaceUsage:");
    sb.append(this.jvmMemoryPoolsG1EdenSpaceUsage);
    first = false;
    if (!first) sb.append(", ");
    sb.append("jvmMemoryPoolsG1OldGenUsage:");
    sb.append(this.jvmMemoryPoolsG1OldGenUsage);
    first = false;
    if (!first) sb.append(", ");
    sb.append("jvmMemoryPoolsG1PermGenUsage:");
    sb.append(this.jvmMemoryPoolsG1PermGenUsage);
    first = false;
    if (!first) sb.append(", ");
    sb.append("jvmMemoryPoolsG1SurvivorSpaceUsage:");
    sb.append(this.jvmMemoryPoolsG1SurvivorSpaceUsage);
    first = false;
    if (!first) sb.append(", ");
    sb.append("jvmGcG1OldGenerationCount:");
    sb.append(this.jvmGcG1OldGenerationCount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("jvmGcG1OldGenerationTime:");
    sb.append(this.jvmGcG1OldGenerationTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("jvmGcG1YoungGenerationCount:");
    sb.append(this.jvmGcG1YoungGenerationCount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("jvmGcG1YoungGenerationTime:");
    sb.append(this.jvmGcG1YoungGenerationTime);
    first = false;
    if (isSetMetadata()) {
      if (!first) sb.append(", ");
      sb.append("metadata:");
      if (this.metadata == null) {
        sb.append("null");
      } else {
        sb.append(this.metadata);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class StatWithG1CollectorStandardSchemeFactory implements SchemeFactory {
    public StatWithG1CollectorStandardScheme getScheme() {
      return new StatWithG1CollectorStandardScheme();
    }
  }

  private static class StatWithG1CollectorStandardScheme extends StandardScheme<StatWithG1Collector> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, StatWithG1Collector struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // AGENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.agentId = iprot.readString();
              struct.setAgentIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TIMESTAMP
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.timestamp = iprot.readI64();
              struct.setTimestampIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // JVM_MEMORY_TOTAL_USED
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.jvmMemoryTotalUsed = iprot.readI64();
              struct.setJvmMemoryTotalUsedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // JVM_MEMORY_TOTAL_MAX
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.jvmMemoryTotalMax = iprot.readI64();
              struct.setJvmMemoryTotalMaxIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // JVM_MEMORY_HEAP_USED
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.jvmMemoryHeapUsed = iprot.readI64();
              struct.setJvmMemoryHeapUsedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // JVM_MEMORY_HEAP_MAX
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.jvmMemoryHeapMax = iprot.readI64();
              struct.setJvmMemoryHeapMaxIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // JVM_MEMORY_NON_HEAP_USED
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.jvmMemoryNonHeapUsed = iprot.readI64();
              struct.setJvmMemoryNonHeapUsedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // JVM_MEMORY_NON_HEAP_MAX
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.jvmMemoryNonHeapMax = iprot.readI64();
              struct.setJvmMemoryNonHeapMaxIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // JVM_MEMORY_POOLS_CODE_CACHE_USAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.jvmMemoryPoolsCodeCacheUsage = iprot.readI64();
              struct.setJvmMemoryPoolsCodeCacheUsageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // JVM_MEMORY_POOLS_G1_EDEN_SPACE_USAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.jvmMemoryPoolsG1EdenSpaceUsage = iprot.readI64();
              struct.setJvmMemoryPoolsG1EdenSpaceUsageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // JVM_MEMORY_POOLS_G1_OLD_GEN_USAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.jvmMemoryPoolsG1OldGenUsage = iprot.readI64();
              struct.setJvmMemoryPoolsG1OldGenUsageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // JVM_MEMORY_POOLS_G1_PERM_GEN_USAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.jvmMemoryPoolsG1PermGenUsage = iprot.readI64();
              struct.setJvmMemoryPoolsG1PermGenUsageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // JVM_MEMORY_POOLS_G1_SURVIVOR_SPACE_USAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.jvmMemoryPoolsG1SurvivorSpaceUsage = iprot.readI64();
              struct.setJvmMemoryPoolsG1SurvivorSpaceUsageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // JVM_GC_G1_OLD_GENERATION_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.jvmGcG1OldGenerationCount = iprot.readI64();
              struct.setJvmGcG1OldGenerationCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // JVM_GC_G1_OLD_GENERATION_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.jvmGcG1OldGenerationTime = iprot.readI64();
              struct.setJvmGcG1OldGenerationTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // JVM_GC_G1_YOUNG_GENERATION_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.jvmGcG1YoungGenerationCount = iprot.readI64();
              struct.setJvmGcG1YoungGenerationCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // JVM_GC_G1_YOUNG_GENERATION_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.jvmGcG1YoungGenerationTime = iprot.readI64();
              struct.setJvmGcG1YoungGenerationTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 200: // METADATA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.metadata = iprot.readString();
              struct.setMetadataIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, StatWithG1Collector struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.agentId != null) {
        oprot.writeFieldBegin(AGENT_ID_FIELD_DESC);
        oprot.writeString(struct.agentId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(TIMESTAMP_FIELD_DESC);
      oprot.writeI64(struct.timestamp);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(JVM_MEMORY_TOTAL_USED_FIELD_DESC);
      oprot.writeI64(struct.jvmMemoryTotalUsed);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(JVM_MEMORY_TOTAL_MAX_FIELD_DESC);
      oprot.writeI64(struct.jvmMemoryTotalMax);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(JVM_MEMORY_HEAP_USED_FIELD_DESC);
      oprot.writeI64(struct.jvmMemoryHeapUsed);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(JVM_MEMORY_HEAP_MAX_FIELD_DESC);
      oprot.writeI64(struct.jvmMemoryHeapMax);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(JVM_MEMORY_NON_HEAP_USED_FIELD_DESC);
      oprot.writeI64(struct.jvmMemoryNonHeapUsed);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(JVM_MEMORY_NON_HEAP_MAX_FIELD_DESC);
      oprot.writeI64(struct.jvmMemoryNonHeapMax);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(JVM_MEMORY_POOLS_CODE_CACHE_USAGE_FIELD_DESC);
      oprot.writeI64(struct.jvmMemoryPoolsCodeCacheUsage);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(JVM_MEMORY_POOLS_G1_EDEN_SPACE_USAGE_FIELD_DESC);
      oprot.writeI64(struct.jvmMemoryPoolsG1EdenSpaceUsage);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(JVM_MEMORY_POOLS_G1_OLD_GEN_USAGE_FIELD_DESC);
      oprot.writeI64(struct.jvmMemoryPoolsG1OldGenUsage);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(JVM_MEMORY_POOLS_G1_PERM_GEN_USAGE_FIELD_DESC);
      oprot.writeI64(struct.jvmMemoryPoolsG1PermGenUsage);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(JVM_MEMORY_POOLS_G1_SURVIVOR_SPACE_USAGE_FIELD_DESC);
      oprot.writeI64(struct.jvmMemoryPoolsG1SurvivorSpaceUsage);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(JVM_GC_G1_OLD_GENERATION_COUNT_FIELD_DESC);
      oprot.writeI64(struct.jvmGcG1OldGenerationCount);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(JVM_GC_G1_OLD_GENERATION_TIME_FIELD_DESC);
      oprot.writeI64(struct.jvmGcG1OldGenerationTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(JVM_GC_G1_YOUNG_GENERATION_COUNT_FIELD_DESC);
      oprot.writeI64(struct.jvmGcG1YoungGenerationCount);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(JVM_GC_G1_YOUNG_GENERATION_TIME_FIELD_DESC);
      oprot.writeI64(struct.jvmGcG1YoungGenerationTime);
      oprot.writeFieldEnd();
      if (struct.metadata != null) {
        if (struct.isSetMetadata()) {
          oprot.writeFieldBegin(METADATA_FIELD_DESC);
          oprot.writeString(struct.metadata);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class StatWithG1CollectorTupleSchemeFactory implements SchemeFactory {
    public StatWithG1CollectorTupleScheme getScheme() {
      return new StatWithG1CollectorTupleScheme();
    }
  }

  private static class StatWithG1CollectorTupleScheme extends TupleScheme<StatWithG1Collector> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, StatWithG1Collector struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetAgentId()) {
        optionals.set(0);
      }
      if (struct.isSetTimestamp()) {
        optionals.set(1);
      }
      if (struct.isSetJvmMemoryTotalUsed()) {
        optionals.set(2);
      }
      if (struct.isSetJvmMemoryTotalMax()) {
        optionals.set(3);
      }
      if (struct.isSetJvmMemoryHeapUsed()) {
        optionals.set(4);
      }
      if (struct.isSetJvmMemoryHeapMax()) {
        optionals.set(5);
      }
      if (struct.isSetJvmMemoryNonHeapUsed()) {
        optionals.set(6);
      }
      if (struct.isSetJvmMemoryNonHeapMax()) {
        optionals.set(7);
      }
      if (struct.isSetJvmMemoryPoolsCodeCacheUsage()) {
        optionals.set(8);
      }
      if (struct.isSetJvmMemoryPoolsG1EdenSpaceUsage()) {
        optionals.set(9);
      }
      if (struct.isSetJvmMemoryPoolsG1OldGenUsage()) {
        optionals.set(10);
      }
      if (struct.isSetJvmMemoryPoolsG1PermGenUsage()) {
        optionals.set(11);
      }
      if (struct.isSetJvmMemoryPoolsG1SurvivorSpaceUsage()) {
        optionals.set(12);
      }
      if (struct.isSetJvmGcG1OldGenerationCount()) {
        optionals.set(13);
      }
      if (struct.isSetJvmGcG1OldGenerationTime()) {
        optionals.set(14);
      }
      if (struct.isSetJvmGcG1YoungGenerationCount()) {
        optionals.set(15);
      }
      if (struct.isSetJvmGcG1YoungGenerationTime()) {
        optionals.set(16);
      }
      if (struct.isSetMetadata()) {
        optionals.set(17);
      }
      oprot.writeBitSet(optionals, 18);
      if (struct.isSetAgentId()) {
        oprot.writeString(struct.agentId);
      }
      if (struct.isSetTimestamp()) {
        oprot.writeI64(struct.timestamp);
      }
      if (struct.isSetJvmMemoryTotalUsed()) {
        oprot.writeI64(struct.jvmMemoryTotalUsed);
      }
      if (struct.isSetJvmMemoryTotalMax()) {
        oprot.writeI64(struct.jvmMemoryTotalMax);
      }
      if (struct.isSetJvmMemoryHeapUsed()) {
        oprot.writeI64(struct.jvmMemoryHeapUsed);
      }
      if (struct.isSetJvmMemoryHeapMax()) {
        oprot.writeI64(struct.jvmMemoryHeapMax);
      }
      if (struct.isSetJvmMemoryNonHeapUsed()) {
        oprot.writeI64(struct.jvmMemoryNonHeapUsed);
      }
      if (struct.isSetJvmMemoryNonHeapMax()) {
        oprot.writeI64(struct.jvmMemoryNonHeapMax);
      }
      if (struct.isSetJvmMemoryPoolsCodeCacheUsage()) {
        oprot.writeI64(struct.jvmMemoryPoolsCodeCacheUsage);
      }
      if (struct.isSetJvmMemoryPoolsG1EdenSpaceUsage()) {
        oprot.writeI64(struct.jvmMemoryPoolsG1EdenSpaceUsage);
      }
      if (struct.isSetJvmMemoryPoolsG1OldGenUsage()) {
        oprot.writeI64(struct.jvmMemoryPoolsG1OldGenUsage);
      }
      if (struct.isSetJvmMemoryPoolsG1PermGenUsage()) {
        oprot.writeI64(struct.jvmMemoryPoolsG1PermGenUsage);
      }
      if (struct.isSetJvmMemoryPoolsG1SurvivorSpaceUsage()) {
        oprot.writeI64(struct.jvmMemoryPoolsG1SurvivorSpaceUsage);
      }
      if (struct.isSetJvmGcG1OldGenerationCount()) {
        oprot.writeI64(struct.jvmGcG1OldGenerationCount);
      }
      if (struct.isSetJvmGcG1OldGenerationTime()) {
        oprot.writeI64(struct.jvmGcG1OldGenerationTime);
      }
      if (struct.isSetJvmGcG1YoungGenerationCount()) {
        oprot.writeI64(struct.jvmGcG1YoungGenerationCount);
      }
      if (struct.isSetJvmGcG1YoungGenerationTime()) {
        oprot.writeI64(struct.jvmGcG1YoungGenerationTime);
      }
      if (struct.isSetMetadata()) {
        oprot.writeString(struct.metadata);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, StatWithG1Collector struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(18);
      if (incoming.get(0)) {
        struct.agentId = iprot.readString();
        struct.setAgentIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.timestamp = iprot.readI64();
        struct.setTimestampIsSet(true);
      }
      if (incoming.get(2)) {
        struct.jvmMemoryTotalUsed = iprot.readI64();
        struct.setJvmMemoryTotalUsedIsSet(true);
      }
      if (incoming.get(3)) {
        struct.jvmMemoryTotalMax = iprot.readI64();
        struct.setJvmMemoryTotalMaxIsSet(true);
      }
      if (incoming.get(4)) {
        struct.jvmMemoryHeapUsed = iprot.readI64();
        struct.setJvmMemoryHeapUsedIsSet(true);
      }
      if (incoming.get(5)) {
        struct.jvmMemoryHeapMax = iprot.readI64();
        struct.setJvmMemoryHeapMaxIsSet(true);
      }
      if (incoming.get(6)) {
        struct.jvmMemoryNonHeapUsed = iprot.readI64();
        struct.setJvmMemoryNonHeapUsedIsSet(true);
      }
      if (incoming.get(7)) {
        struct.jvmMemoryNonHeapMax = iprot.readI64();
        struct.setJvmMemoryNonHeapMaxIsSet(true);
      }
      if (incoming.get(8)) {
        struct.jvmMemoryPoolsCodeCacheUsage = iprot.readI64();
        struct.setJvmMemoryPoolsCodeCacheUsageIsSet(true);
      }
      if (incoming.get(9)) {
        struct.jvmMemoryPoolsG1EdenSpaceUsage = iprot.readI64();
        struct.setJvmMemoryPoolsG1EdenSpaceUsageIsSet(true);
      }
      if (incoming.get(10)) {
        struct.jvmMemoryPoolsG1OldGenUsage = iprot.readI64();
        struct.setJvmMemoryPoolsG1OldGenUsageIsSet(true);
      }
      if (incoming.get(11)) {
        struct.jvmMemoryPoolsG1PermGenUsage = iprot.readI64();
        struct.setJvmMemoryPoolsG1PermGenUsageIsSet(true);
      }
      if (incoming.get(12)) {
        struct.jvmMemoryPoolsG1SurvivorSpaceUsage = iprot.readI64();
        struct.setJvmMemoryPoolsG1SurvivorSpaceUsageIsSet(true);
      }
      if (incoming.get(13)) {
        struct.jvmGcG1OldGenerationCount = iprot.readI64();
        struct.setJvmGcG1OldGenerationCountIsSet(true);
      }
      if (incoming.get(14)) {
        struct.jvmGcG1OldGenerationTime = iprot.readI64();
        struct.setJvmGcG1OldGenerationTimeIsSet(true);
      }
      if (incoming.get(15)) {
        struct.jvmGcG1YoungGenerationCount = iprot.readI64();
        struct.setJvmGcG1YoungGenerationCountIsSet(true);
      }
      if (incoming.get(16)) {
        struct.jvmGcG1YoungGenerationTime = iprot.readI64();
        struct.setJvmGcG1YoungGenerationTimeIsSet(true);
      }
      if (incoming.get(17)) {
        struct.metadata = iprot.readString();
        struct.setMetadataIsSet(true);
      }
    }
  }

}

