<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee" xmlns:lang="http://www.springframework.org/schema/lang"
       xmlns:beans="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:hdp="http://www.springframework.org/schema/hadoop"
       xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/hadoop http://www.springframework.org/schema/hadoop/spring-hadoop.xsd">

    <context:annotation-config/>

    <context:component-scan
            base-package="com.nhn.pinpoint.collector.dao.hbase,
                        com.nhn.pinpoint.collector.handler,
                        com.nhn.pinpoint.collector.mapper
                        com.nhn.pinpoint.collector.util" />

    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:hbase.properties</value>
                <value>classpath:pinpoint-collector.properties</value>
            </list>
        </property>

    </bean>

    <util:properties id="pinpoint_collector_properties" location="classpath:pinpoint-collector.properties" />

    <bean id="collectorConfiguration" class="com.nhn.pinpoint.collector.config.CollectorConfiguration">
        <property name="properties" ref="pinpoint_collector_properties"/>
    </bean>

    <import resource="classpath:applicationContext-hbase.xml"/>

    <bean id="tcpDispatchHandler" class="com.nhn.pinpoint.collector.receiver.TcpDispatchHandler"/>
    <bean id="udpDispatchHandler" class="com.nhn.pinpoint.collector.receiver.UdpDispatchHandler"/>
    <bean id="udpSpanDispatchHandler" class="com.nhn.pinpoint.collector.receiver.UdpSpanDispatchHandler"/>


    <bean id="daoAutoFlusher" class="com.nhn.pinpoint.collector.dao.AutoFlusher" init-method="initialize" destroy-method="shutdown">
    	<beans:property name="cachedStatisticsDaoList">
    		<beans:list>
    			<beans:ref bean="hbaseMapStatisticsCallerDao"/>
    			<beans:ref bean="hbaseMapStatisticsCalleeDao"/>
                <beans:ref bean="hbaseMapResponseTimeDao"/>
    		</beans:list>
    	</beans:property>
        <property name="flushPeriod" value="${statistics.flushPeriod}"/>
    </bean>
    
    <bean id="metricRegistry" class="com.codahale.metrics.MetricRegistry">
    </bean>
    
    <bean id="agentStatStore" class="com.nhn.pinpoint.collector.monitor.DefaultAgentStatStore">
    </bean>
    
    <bean id="metricsServlet" class="com.codahale.metrics.servlets.MetricsServlet">
        <constructor-arg ref="metricRegistry" />
    </bean>
    
    <bean id="agentStatServlet" class="com.nhn.pinpoint.collector.monitor.servlet.AgentStatServlet">
    </bean>

    <bean id="statServer" class="com.nhn.pinpoint.collector.StatServer">
    </bean>

    <bean id="tcpReceiver" class="com.nhn.pinpoint.collector.receiver.tcp.TCPReceiver">
        <constructor-arg type="com.nhn.pinpoint.collector.receiver.DispatchHandler" ref="tcpDispatchHandler"/>
        <constructor-arg value="#{collectorConfiguration.tcpListenIp}"/>
        <constructor-arg value="#{collectorConfiguration.tcpListenPort}"/>
    </bean>

    <bean id="udpSpanReceiver" class="com.nhn.pinpoint.collector.receiver.udp.UDPReceiver">
        <constructor-arg value="Pinpoint-UDP-Span"/>
        <constructor-arg type="com.nhn.pinpoint.collector.receiver.DispatchHandler" ref="udpSpanDispatchHandler"/>
        <constructor-arg value="#{collectorConfiguration.udpSpanListenIp}"/>
        <constructor-arg value="#{collectorConfiguration.udpSpanListenPort}"/>
        <constructor-arg value="#{collectorConfiguration.udpSpanSocketReceiveBufferSize}"/>
        <constructor-arg value="#{collectorConfiguration.udpSpanWorkerThread}"/>
        <constructor-arg value="#{collectorConfiguration.udpSpanWorkerQueueSize}"/>
    </bean>

    <bean id="udpStatReceiver" class="com.nhn.pinpoint.collector.receiver.udp.UDPReceiver">
        <constructor-arg value="Pinpoint-UDP-Stat"/>
        <constructor-arg type="com.nhn.pinpoint.collector.receiver.DispatchHandler" ref="udpDispatchHandler"/>
        <constructor-arg value="#{collectorConfiguration.udpStatListenIp}"/>
        <constructor-arg value="#{collectorConfiguration.udpStatListenPort}"/>
        <constructor-arg value="#{collectorConfiguration.udpStatSocketReceiveBufferSize}"/>
        <constructor-arg value="#{collectorConfiguration.udpStatWorkerThread}"/>
        <constructor-arg value="#{collectorConfiguration.udpStatWorkerQueueSize}"/>
    </bean>
    
    <bean id="jsonObjectMapper" class="org.codehaus.jackson.map.ObjectMapper">
    </bean>

    <bean id="hTable" class="com.nhn.pinpoint.common.hbase.HBaseTables"></bean>

    <bean id="callerMerge" class="com.nhn.pinpoint.collector.dao.hbase.statistics.RowKeyMerge">
        <constructor-arg value="#{hTable.APPLICATION_MAP_STATISTICS_CALLER_CF_COUNTER}"/>
    </bean>

    <bean id="calleeMerge" class="com.nhn.pinpoint.collector.dao.hbase.statistics.RowKeyMerge">
        <constructor-arg value="#{hTable.APPLICATION_MAP_STATISTICS_CALLEE_CF_COUNTER}"/>
    </bean>

    <bean id="selfMerge" class="com.nhn.pinpoint.collector.dao.hbase.statistics.RowKeyMerge">
        <constructor-arg value="#{hTable.APPLICATION_MAP_STATISTICS_SELF_CF_COUNTER}"/>
    </bean>
    
</beans>