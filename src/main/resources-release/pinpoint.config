#profiler.collector.ip=127.0.0.1
#개발
#profiler.collector.ip=10.64.84.188
#운영
profiler.collector.ip=10.25.149.249

profiler.collector.udpspan.port=9996
profiler.collector.udp.port=9995
profiler.collector.tcp.port=9994


profiler.heartbeat.interval=60000

# 지정하지 않으면 TOMCAT이 기본값.
profiler.servicetype=TOMCAT
#profiler.servicetype=BLOC


profiler.enable=true

profiler.jdbc=true

# mysql
profiler.jdbc.mysql=true
profiler.jdbc.mysql.setautocommit=false
profiler.jdbc.mysql.commit=false
profiler.jdbc.mysql.rollback=false

# mssql
profiler.jdbc.mssql=false

# oracle
profiler.jdbc.oracle=true
profiler.jdbc.oracle.setautocommit=false
profiler.jdbc.oracle.commit=false
profiler.jdbc.oracle.rollback=false

# cubrid
profiler.jdbc.cubrid=true
profiler.jdbc.cubrid.setautocommit=false
profiler.jdbc.cubrid.commit=false
profiler.jdbc.cubrid.rollback=false

#dbcp
profiler.jdbc.dbcp=false

profiler.jvm.collect.interval=1000

#web view 테스트용. 나중에 필요하면 정규식형태로 바꿔도 되고 필요 없으면 삭제.
profiler.include=com.nhn.pinpoint.testweb.controller.*,com.nhn.pinpoint.testweb.MyClass

profiler.sampling.enable=true
profiler.sampling.rate=1

#timebase 샘플링을 할지 말지 여부 결정.
profiler.sampling.elapsedtimebase.enable=true

#timebase 샘플링 시의 1개 thread에 축정할 트레이스 데이터의 갯수.
profiler.sampling.elapsedtimebase.buffersize=20

#timebase 샘플링시 discard.timelimit 의 시간보다 작을 경우 트레이스 데이터를 버릴지 말지 여부
profiler.sampling.elapsedtimebase.discard=true

#timebase 샘플링시 discard.timelimit 해당 시간보다 빨리 끝났을 경우 트레이스 데이터를 버려 버린다.
profiler.sampling.elapsedtimebase.discard.timelimit=1000